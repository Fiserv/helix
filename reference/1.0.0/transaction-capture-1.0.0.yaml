---
openapi: 3.0.3
info:
  title: transaction-capture
  version: 1.1.0-139
tags:
- name: Transaction capture Rest API
paths:
  /TransactionCapture/V1/Transaction/GetList/Request:
    post:
      tags:
      - Transaction capture Rest API
      summary: This method is used to retrieve the transaction data based on the given
        filter criteria. Only enabled transactions will be returned.
      operationId: retrieveTransaction
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveTransactionRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveTransactionResponse'
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXTXCP_TXCP_002\
            \ : Error occurred while retrieving the transaction data, please try again.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXTXCP_TXCP_002\
            \ : Error occurred while retrieving the transaction data, please try again.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Retrieve a list of Transactions
      x-group-name: Transaction Management
  /TransactionCapture/V1/Transaction/{TransactionCaptureId}/retrieve:
    get:
      parameters:
      - name: TransactionCaptureId
        in: path
        required: true
        schema:
          maxLength: 37
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRetrievalResponse'
      x-proxy-name: Retrieve a Transaction
      x-group-name: Transaction Management
components:
  schemas:
    RetrieveTransactionRequest:
      type: object
      properties:
        agreementId:
          description: Unique identifier associated with the account. Either agreementID or paymentInstrumentId is mandatory.
          maxLength: 37
          type: string
        paymentInstrumentId:
          description: Unique identifier associated with the payment card. Either agreementID or paymentInstrumentId is mandatory.
          maxLength: 37
          type: string
        positionType:
          description: " A filter to retrieve transactions associated with positions\
            \ of a specific type. Only transactions matching the specified position\
            \ type will be returned in the response. Valid values are: <UL><LI> RETL\
            \ (Retail) </LI><LI> CASH (Cash) </LI></UL> "
          type: string
        positionComponent:
          description: "A filter to retrieve transactions associated with a specific\
            \ position component. Only transactions matching the specified position\
            \ component will be returned in the response. The valid values are: <UL><LI>\
            \ PEND (Pending) </LI><LI> PRPL (Principal)</LI><LI> INTR (Interest) </LI>\
            \ </UL> "
          type: string
        minAmount:
          description: Amount associated with the Authorised or Clearing transaction. Transaction Status is mandatory if amount range search criteria is used 
          minLength: 1
          type: string
        maxAmount:
          description: Amount associated with the Authorised or Clearing transaction. Transaction Status is mandatory if amount range search criteria is used 
          minLength: 1
          type: string
        startEffectiveDate:
          description: Date filter is applied on the date on which transaction was done 
          minLength: 1
          pattern: "^((?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\
            d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\
            d|2[0-3]):[0-5]\\d:[0-5]\\d(?:.\\d{0,3}\\b)?)?$"
          type: string
          example: 2016-09-06T12:45:30
        endEffectiveDate:
          description: End Date filter is applied on the date on which transaction was done and logic is that date should be less or equal to this end date
          minLength: 1
          pattern: "^((?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\
            d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\
            d|2[0-3]):[0-5]\\d:[0-5]\\d(?:.\\d{0,3}\\b)?)?$"
          type: string
          example: 2016-09-06T12:45:30
        transactionStatus:
          description: Identifies the progress of the transaction lifecycle - Pending (Authorised) --> Posted (Settled) --> Billed
                        <br/><br/>Valid Values are<br/>
                        <UL><LI>PEND</LI>
                        <LI>POST</LI>
                        <LI>BILL</LI></UL>
          type: string
        transactionCategory:
          description: transaction category
          type: string
        pageStartIndex:
          format: int32
          description: The page start index is an optional field which specifies the starting index for the page of results. It is an integer that represents the index of the page. The first page corresponds to the PageStartIndex value of 0.
          type: integer
        pageLimit:
          format: int32
          description: The page limit is an optional parameter which specifies the maximum number of records to return in the page of results. It is an integer that represents the total number of records on a single page. The PageLimit must have a minimum value of 1, indicating at least one record per page. 
          type: integer
        startPostingDate:
          description: Posting Start Date and Time.
          minLength: 1
          pattern: "^((?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\
            d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\
            d|2[0-3]):[0-5]\\d:[0-5]\\d(?:.\\d{0,3}\\b)?)?$"
          type: string
          example: 2016-09-06T12:45:30
        endPostingDate:
          description: Posting End Date and Time.
          minLength: 1
          pattern: "^((?:[1-9]\\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\\\
            d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\\\
            d|2[0-3]):[0-5]\\d:[0-5]\\d(?:.\\d{0,3}\\b)?)?$"
          type: string
          example: 2016-09-06T12:45:30
    RetrieveTransactionResponse:
      type: object
      properties:
        data:
          description: transaction details
          type: array
          items:
            $ref: '#/components/schemas/TransactionRetrievalResponse'
    Transaction:
      type: object
      properties:
        TransactionCode:
          description: Identifier to categorize different types of transactions 
          type: string
        PositionType:
          description: "Identifies the type of position, representing a specific category\
            \ of balances associated with the account. The position type provides\
            \ a classification for grouping similar types of positions, such as Retail.\
            \ Valid values are: <UL><LI> RETL (Retail) </LI><LI> CASH (Cash) </LI><LI>\
            \ CRRT (Current) </LI></UL> "
          type: string
        PositionComponent:
          description: "Identifies the type of position component, representing a\
            \ sub-category of balances associated with the position. The position\
            \ component provides further classification for distinguishing different\
            \ types of balances within a position, such as Principal. Valid values\
            \ are: <UL><LI> PRPL (Principal)</LI><LI> PEND (Pending Balance) </LI><LI>\
            \ INTR (Interest) </LI><LI> BAL  (Total Cleared Balance for the account)</LI></UL>\
            \ Note: The Current (CRRT) position's, BAL (Balance) component holds the\
            \ account level cleared balance across all the positions."
          type: string
        TransactionReferenceId:
          description: Identification of Transaction Reference provided by transaction
            capture service.
          type: string
        EffectiveDateTime:
          description: Date on which transaction was done
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
        Amount:
          description: Transaction Amount
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount'
    TransactionAmounts:
      type: object
      properties:
        transactionAmount:
          description: transaction Amount
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount2'
        reconciliationAmount:
          description: reconciliation Amount
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount2'
        cardholderBillingAmount:
          description: cardholder Billing Amount
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount2'
    TransactionRetrievalResponse:
      type: object
      properties:
        transactionId:
          description: Unique identifier associated with the transaction
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
        financialInstitution:
          description: FI to which the Transaction belongs
          type: string
        brand:
          description: Brand to which the Transaction belongs
          type: string
        product:
          description: Product to which the Transaction belongs
          type: string
        agreementId:
          description: Unique identifier associated with the account. Either agreementID or paymentInstrumentId is mandatory.
          type: string
        paymentInstrumentId:
          description: Unique identifier associated with the payment card. Either agreementID or paymentInstrumentId is mandatory.
          type: string
        partyId:
          description: Associated Party ID to which this Transaction Belongs
          type: string
        status:
          description: Status of the Transaction Record
          type: string
        creationDateTime:
          description: Date when Transaction was Created
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
        effectiveDateTime:
          description: Date on which transaction was done
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
        transactionCode:
          description: Identifier to categorize different types of transactions
          type: string
        positionType:
          description: "Identifies the type of position, representing a specific category\
            \ of balances associated with the transaction. The position type provides\
            \ a classification for grouping similar types of transactions, such as\
            \ Retail. Valid values are:<UL><LI> RETL (Retail) </LI><LI> CASH (Cash)\
            \ </LI></UL> The valid combinations of Positions and Position Components\
            \ are: <UL> <LI> RETL and PRPL </LI><LI> RETL and INTR </LI> <LI> RETL\
            \ and PEND </LI> <LI> CASH and PRPL </LI> <LI> CASH and INTR </LI> <LI>\
            \ CASH and PEND </LI> </UL>"
          type: string
        positionComponent:
          description: "The position component field within a transaction is used\
            \ to identify the specific type of balance associated with the transaction.\
            \ This field provides a further classification to distinguish the position\
            \ component affected by a transaction, such as Principal. Valid values\
            \ are:<UL> <LI> PRPL (Principal)</LI><LI> INTR (Interest) </LI> <LI> PEND\
            \ (Pending) </LI> </UL>"
          type: string
        networkReferenceId:
          description: Network Reference ID - Network Reference ID captured in Authorisation
            Domain during Authorisation Process which is passed by Scheme. Mandatory
            for all pending transactions ( transactions approved but not settled)
            Bank network Reference Number - DE 63.2 for MC Transaction Identifier
            - DE 62.2 for Visa
          type: string
        authorisationReferenceId:
          description: Authorisation Reference ID - Reference ID captured in Authorisation
            Domain during Authorisation Process. Mandatory for all pending transactions
            ( transactions approved but not settled) System Trace Audit Number (STAN)
            DE 11
          type: string
        cardClearingReferenceId:
          description: CardClearing ID - Reference ID captured in Card Clearing Domain
            during Card Clearing process Retrieval Reference Number - DE 37.
          type: string
        settlementStatusCode:
          description: Provides the status of settlement of an instruction.
          type: string
        clearingMatchStatusCode:
          description: Provides the status of Clearing Match.
          type: string
        billingStatusCode:
          description: Provides the status of Billing of an instruction.
          type: string
        transactionTypeCode:
          description: "Specifies the type, or nature, of the payment."
          type: string
        paymentFunctionCode:
          description: Identifies the message function
          type: string
        merchantId:
          description: A unique identifier assigned to a merchant by the acquirer, 
                       which allows for precise and accurate tracking of transactions processed by that merchant.
          type: string
        merchantName:
          description: This field displays  the name of the merchant.
          type: string
        merchantLocation:
          description: This Field displays the Location of the Merchant
          type: string
        merchantCountry:
          description: This field displays the country of the Merchant
          type: string
        merchantCategoryCode:
          description: Merchant Category Code, is a four-digit code used by credit card networks (such as Visa, MasterCard, and American Express) to classify merchants by the type of goods or services they provide.
          type: string
        terminalId:
          description: Terminal ID DE 41
          type: string
        terminalTypeCode:
          description: Terminal Type Code PDS 0023
          type: string
        terminalCapabilityCode:
          description: Terminal Card Data Input
          type: string
        approvalCode:
          description: An approval code is a unique alphanumeric code provided by the issuing bank or card network when a credit card transaction is approved.
          type: string
        cardPresentIndicator:
          description: The Card Present Indicator is a parameter used in payment processing to signify whether a credit or debit card was physically present during a transaction
          type: boolean
        cardholderPresentIndicator:
          description: The cardholder physically presents the card to the merchant to complete the transaction.
          type: boolean
        ecommerceIndicator:
          description: Ecommerce Indicator
          type: boolean
        motoInd:
          description: Mail or Telephone Order
          type: boolean
        cardDataInput:
          description: Terminal Card Data Input Method Code
          type: string
        transactionInitiatorType:
          description: Transaction Initiator Type
          type: string
        description:
          description: Provides a meaningful description  to help the customer recognize the transaction  
          type: string
        originalAmount:
          description: Original Authorized Amount
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount2'
        actualAmount:
          description: Posted Amount 
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount2'
        postingDateTime:
          description: Indicates the date on which the transaction is posted on customer account
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
        billingDate:
          description: Date when Transaction is Billed
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDate'
        transactionEntry:
          description: Indicates whether the transaction  is a credit or debit type
                       <br/><br/>Valid values are<br/>
                       <UL><LI>CRED</LI>
                       <LI>DEBT</LI></UL> 
          enum:
          - "CRED, DEBT"
          type: string
        transactionStatus:
          description: Identifies the progress of the transaction lifecycle - Pending (Authorised) --> Posted (Settled) --> Billed
                        <br/><br/>Valid Values are<br/>
                        <UL><LI>PEND</LI>
                        <LI>POST</LI>
                        <LI>BILL</LI></UL> 
          enum:
          - PENDING
          - POSTED
          - BILLED
          type: string
        panLastFourDigits:
          description: Last four digits of Primary Account Number linked to transaction
          type: string
        transactionCategory:
          description: Indicates Transaction category
          type: string
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    Value:
      type: object
      properties:
        verificationDataValue:
          description: verification Data Value
          type: string
    Amount2:
      type: object
      properties:
        value:
          description: This field indicates the original numerical amount that is being transferred
          type: number
        currency:
          description: This field indicates the currency of the payment (for example, euros, dollars, pounds, etc.) CCY = USD - As per the ISO 4217
          type: string
    Amount:
      type: object
      properties:
        Value:
          description: This field indicates the original numerical amount that is being transferred
          type: string
        Currency:
          description: This field indicates the currency of the payment (for example, euros, dollars, pounds, etc.) CCY = USD - As per the ISO 4217
          type: string
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    LocalDate:
      format: date
      type: string
      example: 2022-03-10
    HelixErrorDetails:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/HelixMessage'
    HelixMessage:
      type: object
      properties:
        errorCode:
          type: string
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
  securitySchemes:
    SecurityScheme:
      type: http
      description: Authentication
      scheme: basic
