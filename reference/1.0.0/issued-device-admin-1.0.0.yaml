---
openapi: 3.0.3
info:
  title: issued-device-admin
  version: 1.1.0-437
tags:
- name: Helix Core
  x-proxy-name: Delete Card
  x-group-name: Card Management
paths:
  /IssuedDeviceAdmin/V1/PaymentInstrument/Delete/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to delete a card
      description: This service allows to delete a card using provided payment instrument
        id for account servicing.
      operationId: deleteCard
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
        x-proxy-name: Delete Card
        x-group-name: Card Management
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
        x-proxy-name: Delete Card
        x-group-name: Card Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CardDeleteRequest"
      responses:
        x-proxy-name: Delete Card
        x-group-name: Card Management
        "204":
          description: No Content
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : FEPID required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : FEPID less than minimum 36 length allowed.</em></li><li><em>HLXIDASBR001\
            \ : FEPID exceeds maximum 37 length allowed.</em></li><li><em>HLXIDASBR001\
            \ : SkipFacilityAllocationDeletion is not valid, please provide valid\
            \ value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASCD001\
            \ : Attempt to delete card has failed due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
          x-proxy-name: Delete Card
          x-group-name: Card Management
        "200":
          description: OK
      x-proxy-name: Delete Card
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/GetList/Request:
    post:
      tags:
      - Helix Core
      summary: This method is used to return the list of payment instruments for an
        account (FEAID) or a person (FECID) or an external identification (CRM ID)
      description: "This method is used to return the list of payment instruments\
        \ for an account (FEAID) or a person (FECID) or an external identification\
        \ (CRM ID). This method also supports retrieving a list of cards associated\
        \ with an Account that belongs to a specific Person, by supplying a search\
        \ request using Account and Person combination.The order that the payment\
        \ instruments will be returned in depends on their status, i.e.<br /><ol><li>\
        \ Activated cards are returned first and will be sorted in activation date\
        \ order (latest activated card showing first)</li><li> Not yet activated cards\
        \ will be sorted by card creation date/time (latest created card shown first)</li><li>\
        \ Lost/stolen cards will be sorted by block date/time (latest blocked card\
        \ showing first)</li><li> Cancelled cards will be sorted by cancellation date/time\
        \ (latest cancelled card showing first)</li></ol>"
      operationId: getPaymentInstrumentList
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: listType
        in: query
        description: "Filter for retrieving cards falling in specific status. <br\
          \ />Accepted Values are: <br /><ul><li> inOperation - Retrieve cards that\
          \ are  Enabled, isCancelled = false, not blocked as Lost/Stolen, not confirmed\
          \ fraud and expiry dateis greater than or equal to current processing date.</li>\
          \ </ul>"
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PaymentInstrumentGetListRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Party or Account or CRM ID search criteria required, please provide\
            \ at least one value.</em></li><li><em>HLXIDASBR001 : Account less than\
            \ minimum 36 length allowed.</em></li><li><em>HLXIDASBR001 : Account exceeds\
            \ maximum 37 length allowed.</em></li><li><em>HLXIDASBR001 : Account is\
            \ not valid, please provide valid value.</em></li><li><em>HLXIDASBR001\
            \ : Person less than minimum 36 length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Person exceeds maximum 37 length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Person is not valid, please provide valid value.</em></li><li><em>HLXIDASBR001\
            \ : External Identification exceeds maximum 35 length allowed.</em></li><li><em>HLXIDASBR001\
            \ : External Identification is not valid, please provide valid value.</em></li><li><em>HLXIDASBR001\
            \ : Search criteria combination is only allowed for Person and Account.</em></li><li><em>HLXIDASBR001\
            \ : listType is not valid, please provide valid value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASNE007\
            \ : Person not enabled.</em></li><li><em>HLXIDASNE006 : Account not enabled.</em></li><li><em>HLXIDASID003\
            \ : Card not found.</em></li><li><em>HLXIDASEI001 : Identification exceeds\
            \ maximum 37 length allowed.</em></li><li><em>HLXIDASEI001 : TypeOfIdentificationCode\
            \ required, please provide value.</em></li><li><em>HLXIDASEI001 : TypeOfIdentificationCode\
            \ is not valid, please provide valid value.</em></li><li><em>HLXIDASEI001\
            \ : Identification required, please provide value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Retrieve a list of cards
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/GetPANContactDetails/Request:
    post:
      tags:
      - Helix Core
      summary: This method is used to return the Contact details of a given PAN
      description: |-
        3D Secure authentication is a security protocol designed to reduce the risk of fraud, identity theft and other suspicious activities during CNP (Card Not Present) transactions. It requires customer to complete an additional verification step with the card issuer when paying.
        This API allows issuer to retrieve contact details of the cardholder from system and send it to ACS (Access Control Server)
        to conduct 3D Secure authentication.
      operationId: getPanContactDetails
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetrievePanContactDetailsRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Mobile:
                    description: Mobile number of the cardholder
                    type: string
                  DateMobileModified:
                    description: "Date and time when mobile number was last updated,\
                      \ This will be present only when mobile number is present in\
                      \ response (YYYY-MM-DD hh:mm:ss [. fraction ])."
                    type: string
                  Email:
                    description: Email address that is marked as preferred for contact
                      by the cardholder
                    type: string
                  DateEmailModified:
                    description: "Date and time when email address was last updated,\
                      \ This will be present only when email address is present in\
                      \ response (YYYY-MM-DD hh:mm:ss [. fraction ])."
                    type: string
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li><li><em>HLXIDASBR001 : Primary Account Number\
            \ required, please provide value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Retrieve Card Contact Details
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/Initiate:
    post:
      tags:
      - Helix Core
      summary: This method is used to create new card
      description: "<p>This API allows the user to add a new card to the platform.\
        \ The new card will be linked to the Person ID and Account ID provided in\
        \ the request message. It is not intended to be used to replace an existing\
        \ card.<br><p>Note:<br> <ul><li>PAN, CardholderType, DigitalCardType, CardTechnology,\
        \ NameLine1 and NameLine2 attributes are only returned when the Financial\
        \ Institution is processing in Hybrid Mode.</li></ul>"
      operationId: create
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: idempotency-id
        in: header
        description: Idempotency ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddCardRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  FepId:
                    description: Unique identifier for a Card.
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                  ActivationStatus:
                    description: Indicates whether card activation needs to occur
                      for the most recently issued card. Possible Response Values
                      are <UL><LI><EM> ANED (ActivationNeeded) </EM></LI> <EM><LI>
                      ACMP (ActivationComplete) </EM></LI></UL>
                    type: string
                  PAN:
                    description: "Long number that appears on the front of the card\
                      \ (Primary Account Number).</br> Notes: </br> <ul><li>PAN is\
                      \ returned in clear.</li></ul>"
                    type: string
                  CardholderType:
                    description: "Indicates if the card holder of the account is a\
                      \ Primary account Holder or an Additional Account Holder. Possible\
                      \ Response Values are:</br><ul><li>PRIM (Primary)</li><li>ADNL\
                      \ (Additional)</li></ul>"
                    type: string
                  CardTechnology:
                    description: Indicates the technology type supported by the physical
                      card.
                    type: string
                  DigitalCardType:
                    description: "Identifies the type of digital card. Possible values\
                      \ are:</br><ul><li>FTRM (FullTerm)</li><li>STRM (ShortTerm)</li><li>TRAN\
                      \ (Transient)</li><li>NDIG (NonDigital)</li></ul>"
                    type: string
                  NameLine1:
                    description: Cardholder name as it appears on the card.
                    type: string
                  NameLine2:
                    description: Details on second name line as it appears on the
                      card.
                    type: string
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Financial Institution required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : Financial Institution exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Brand required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : Brand exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Product required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : Product exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Account required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : Account exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Party required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : Party exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : CardholderTypeCardholder Type invalid, valid values are PRIM or ADNL.</em></li><li><em>HLXIDASBR001\
            \ : CardholderType required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : Name Line 1 less than minimum length allowed.2 chars</em></li><li><em>HLXIDASBR001\
            \ : Name Line 1 exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Name Line 2 less than minimum length allowed.2 chars</em></li><li><em>HLXIDASBR001\
            \ : Name Line 2 exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Bundle ID required, please provide value.</em></li></ul>"
          content: {}
        "401":
          description: Not Authorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPA002\
            \ : Person not found.</em></li><li><em>HLXIDASFI001 : Financial Institution\
            \ not found.</em></li><li><em>HLXIDASBR001 : Brand not found.</em></li><li><em>HLXIDASPD002\
            \ : Product not found.</em></li><li><em>HLXIDASAC002 : Account not found.</em></li></ul>"
          content: {}
        "413":
          description: Payload Too large
          content: {}
        "415":
          description: Unsupported Media Type
          content: {}
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASNE007\
            \ : Person not enabled.</em></li><li><em>HLXIDASNE001 : Financial Institution\
            \ not enabled.</em></li><li><em>HLXIDASNE002 : Brand not enabled.</em></li><li><em>HLXIDASNE003\
            \ : Product not enabled.</em></li><li><em>HLXIDASNE006 : Account not enabled.</em></li><li><em>HLXIDASAC004\
            \ : Bundle <bundle-id> exceeds maximum 37 length allowed.</em></li><li><em>HLXIDASAC005\
            \ : Bundle <bundle-id> is duplicated within request.</em></li><li><em>HLXIDASAC007\
            \ : Capability <capability-name> has conflicting Features supplied by\
            \ Bundles.</em></li><li><em>HLXIDASAC009 : Error while creating Agreement\
            \ Feature.</em></li><li><em>HLXIDASAC008 : Error while creating facility\
            \ allocation.</em></li><li><em>HLXIDASAC001 : Account is closed.</em></li><li><em>HLXIDASPA005\
            \ : Person <person-id> not found under Financial Institution <fi-id>.\
            \ </em></li><li><em>HLXIDASPA006 : Person <person-id> not linked to Brand\
            \ <brand-id>. </em></li><li><em>HLXIDASDS001 : Account is blocked with\
            \ [Blocked reason code(s)].</ul>"
          content: {}
        "429":
          description: Too Many Request
          content: {}
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASAC001\
            \ : Attempt to add card has failed due to persistence error.</em></li><li><em>HLXIDASSE001\
            \ : Attempt to issue new card has failed.</em></li></ul>"
          content: {}
        "502":
          description: Bad Gateway
          content: {}
        "503":
          description: Service Unavailable
          content: {}
        "504":
          description: Gateway Timeout
          content: {}
        "200":
          description: OK
      x-proxy-name: Add a New Card
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/ReissueCards/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to reissue cards for a product
      operationId: reissueCardsForProduct
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReissueCardRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Reissue a Card
      x-group-name: Card Management
      x-api-scope: Internal
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/ActivateCard/Execute:
    put:
      tags:
      - Helix Core
      summary: This method is used to activate a card
      description: "This API allows the user to activate a card, when a card requires\
        \ activation prior to first use."
      operationId: activateCard
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  FepId:
                    description: Unique identifier of the payment card (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASAS002\
            \ : Card already activated.</em></li><li><em>HLXIDASBV002 : Card already\
            \ blocked as Lost.<li><em>HLXIDASBV002 : Card already blocked as Stolen.</em></li><li><em>HLXIDASAC001\
            \ : Account is closed.</em></li><li><em>HLXIDASBV003 : Card is cancelled.</em></li><li><em>HLXIDASAC010\
            \ : Activate Card is not allowed for suspected fraud cards.</em></li><li><em>HLXIDASAC011\
            \ : Activate Card is not allowed for confirmed fraud cards.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error  <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC002\
            \ : Attempt to activate the card has failed due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Activate a Card
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/AllData/Retrieve:
    get:
      tags:
      - Helix Core
      summary: This method is used to return the issued device details along with
        chip details for the given FEPID
      description: This API allows the user to retrieve details of a specific card
        in the platform.
      operationId: getIssuedDeviceWithChipDetails
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: chipSequence
        in: query
        description: Chip Sequence
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  PaymentInstrumentResponse:
                    description: Payment instrument details
                    type: object
                    allOf:
                    - $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
                    - $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
                    - $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
                    - $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
                    - $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
                  VisaChipDataResponse:
                    description: Visa Chip details for a given payment instrument
                    type: object
                    allOf:
                    - $ref: "#/components/schemas/VisaChipDataResponse"
                    - $ref: "#/components/schemas/VisaChipDataResponse"
                    - $ref: "#/components/schemas/VisaChipDataResponse"
                    - $ref: "#/components/schemas/VisaChipDataResponse"
                    - $ref: "#/components/schemas/VisaChipDataResponse"
                  MasterCardChipDataResponse:
                    description: MasterCard Chip details for a given payment instrument
                    type: object
                    allOf:
                    - $ref: "#/components/schemas/MasterCardChipDataResponse"
                    - $ref: "#/components/schemas/MasterCardChipDataResponse"
                    - $ref: "#/components/schemas/MasterCardChipDataResponse"
                    - $ref: "#/components/schemas/MasterCardChipDataResponse"
                    - $ref: "#/components/schemas/MasterCardChipDataResponse"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASID003\
            \ : Card not found.</em></li><li><em>HLXIDASID008 : Chip Sequence not\
            \ found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Inquire on Card Details with chip data
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/ChangePIN/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to Change PIN for the given FEPID
      description: This method is used to Change PIN for the given FEPID
      operationId: changePin
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteChangePINRequest"
      responses:
        "200":
          description: OK
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li><li><em>HLXIDASBR001 : Current PIN block\
            \ required, please provide value.</em></li><li><em>HLXIDASBR001 : Required\
            \ PIN block required, please provide value.</em></li><li><em>HLXIDASBR001\
            \ : KeyAssociation required, please provide value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASBV002 : Card already\
            \ blocked as Lost.</em></li><li><em>HLXIDASBV002 : Card already blocked\
            \ as Stolen.</em></li><li><em>HLXIDASAC001 : Account is closed.</em></li><li><em>HLXIDASID009\
            \ : Card is cancelled.</em></li><li><em>HLXIDASPC009 : CHANGE_PIN is not\
            \ allowed for confirmed fraud cards.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error<br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC011\
            \ : Attempt to change PIN has failed.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Change PIN
      x-group-name: Card Sensitive Data
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/ContactLessOptChange/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to opt in/out of contactless card
      description: This API allows customers to opt in/out of contactless cards.
      operationId: contactLessOptChange
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteContactLessOptRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  FEPID:
                    description: Unique identifier of the payment card (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                  ContactlessOptOutSwitch:
                    description: Indicates customer preference for contact versus
                      contactless card.
                    type: string
                  CardReplaced:
                    description: Indicates whether card has been replaced or not
                    type: boolean
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASID005 : Card is blocked\
            \ as Lost.</em></li><li><em>HLXIDASID005 : Card is blocked as Stolen.</em></li><li><em>HLXIDASCL002\
            \ : Contactless opt out is not allowed.</em></li><li><em>HLXIDASCL003\
            \ : Contactless opt out preference cannot be set to the same value.</em></li><li><em>HLXIDASCR002\
            \ : Replacement cannot be processed for a non-physical card.</em></li><li><em>HLXIDASCC001\
            \ : Opt out of contactless is not allowed for confirmed fraud cards.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASCL001\
            \ : Contactless opt out failed due to persistence error.</em></li><li><em>HLXIDASCR001\
            \ : Card Replacement failed due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Opt in/out contactless card
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/DeactivateCard/Execute:
    put:
      tags:
      - Helix Core
      summary: This method is used to deactivate a card
      description: This API allows the user to deactivate a card
      operationId: deactivateCard
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  FepId:
                    description: Unique identifier of the payment card (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASAS001 : Card already\
            \ inactive.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC003\
            \ : Attempt to deactivate the card has failed due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Deactivate a Card
      x-group-name: Card Management
      x-api-scope: Internal
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/Fraud/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to update fraud on a card
      description: This API allows to the user update fraud on a card.
      operationId: updateFraudStatus
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: idempotency-id
        in: header
        description: Idempotency ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteFraudRequest"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteFraudResponse"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASFR005 : If card fraud\
            \ status is NONE, replacement card is not applicable.</em></li><li><em>HLXIDASFR004\
            \ : If card fraud status is SFRD, replacement card is not applicable.</em></li><li><em>HLXIDASFR002\
            \ : The card is already blocked as confirmed fraud.</em></li><li><em>HLXIDASFR003\
            \ : The card is already blocked as confirmed fraud and Replacement Card\
            \ is issued.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASFR006\
            \ : fraud failed due to persistence error.</em></li><li><em>HLXIDASBR002\
            \ : Attempt to block and replace the card has failed due to persistence\
            \ error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Update fraud on a card
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/GetCVV2/Request:
    post:
      tags:
      - Helix Core
      summary: This method is used to generate CVV 2 the given FEPID
      description: This API generates and provides the CVV2 for the card. Encryption
        keys and method must be known to use this API.
      operationId: generateCVV2
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestGetCVV2Request'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  CVV:
                    type: string
                  CVV2:
                    type: string
                  ICVV:
                    type: string
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASDP001\
            \ : Attempt to parse date has failed.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Generate CVV2
      x-group-name: Card Sensitive Data
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/LostStolen/Execute:
    put:
      tags:
      - Helix Core
      summary: This method is used to block a card
      description: "This service allows you to report a card as lost or stolen and,\
        \ if appropriate, request a new replacement card and PIN (if the PIN has been\
        \ compromised). Reporting a card as lost or stolen will block the current\
        \ card so that no spend can take place on it and any replacement card that\
        \ has been requested will be with a new PAN. A new PIN will only be generated\
        \ if one has been requested."
      operationId: updateCardBlockStatus
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: idempotency-id
        in: header
        description: Idempotency ID
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IssuedDeviceActionRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  FepId:
                    description: Unique identifier of the payment instrument (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                  NewFepId:
                    description: Unique identifier of the new payment instrument (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                  ActivationStatus:
                    description: Indicates whether card activation needs to occur
                      for the most recently issued card. Possible Response Values
                      are <UL><LI><EM> ANED (ActivationNeeded) </EM></LI> <LI><EM>
                      ACMP (ActivationComplete) </EM></LI></UL>
                    type: string
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV002\
            \ : Card already blocked as Lost.<li><em>HLXIDASBV002 : Card already blocked\
            \ as Stolen.<li><em>HLXIDASID009 : Card is cancelled.</em></li></em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR002\
            \ : Attempt to block and replace the card has failed due to persistence\
            \ error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "200":
          description: OK
      x-proxy-name: Report a Card as Lost or Stolen
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/ManageFraud/Update:
    patch:
      tags:
      - Helix Core
      summary: This method is used to update payment instrument attributes as part
        of a system action/event.
      description: "The Manage Fraud API is a service that enables the management\
        \ of fraud statuses on a card. <p>The API allows a user to update three types\
        \ of fraud statuses, namely:</p><ul><li><em>Fraud Status</em></li><li><em>\
        \ Fraud Refer Status</em></li><li><em> Fraud Monitor Status</em></li></ul>These\
        \ fraud statuses can be used by a Fraud Management system in its rules during\
        \ decision making. With this API, users can easily manage fraud statuses associated\
        \ with a card, providing them with the necessary tools to mitigate potential\
        \ fraud risks.</br>Note: In scenarios where it is necessary to replace a card\
        \ while simultaneously setting its status as Confirmed Fraud, it is recommended\
        \ utilising the Update Fraud Status on a Card API for a streamlined process."
      operationId: manageFraud
      parameters:
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of a card.
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFraudStatusRequest"
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  FraudStatus:
                    description: "This field identifies the specific type of fraud\
                      \ status assigned to a card. Possible responses:<UL><LI><EM>\
                      \ NONE-Indicates that no fraud status has been assigned to the\
                      \ card. </EM></LI> <LI><EM> SFRD-Denotes that the card has been\
                      \ flagged as suspected fraud, necessitating further investigation\
                      \ and verification to confirm any fraudulent activity. </EM></LI>\
                      \ <LI><EM> CFRD-Indicates that the card has been verified and\
                      \ confirmed as involved in fraudulent activities. </EM></LI>\
                      \ </UL>"
                    type: string
                  FraudReferStatus:
                    description: <p>This field indicates whether a card is flagged
                      to have all authorisations referred or not referred (anti-referred)
                      to a fraud analyst for potential fraudulent activity. This flag
                      is sent to the Falcon Fraud Manager system during authorisation
                      processing where it can be used in the rules to make informed
                      authorisation decisions.</p>Possible responses:<UL><LI><EM>
                      NONE-No referral or anti-referral is assigned.</EM></LI> <LI><EM>
                      REFE-All authorizations are referred. </EM></LI> <LI><EM> ANTI-No
                      authorizations are referred (anti-refer). </EM></LI> </UL>
                    type: string
                  FraudReferStatusExpiryDate:
                    description: This field indicates the date on which the Fraud
                      Refer Status expires.
                    type: string
                  FraudMonitorStatus:
                    description: "The Fraud Monitor Status flag is a two-character\
                      \ alphanumeric field utilized to indicate whether a card is\
                      \ flagged for fraud monitoring.This flag is used in order to\
                      \ implement specific fraud minimization strategies within Falcon\
                      \ Fraud Manager system.<br/>The Fraud Monitor Status flag is\
                      \ sent to Falcon Fraud Manager system during authorisation processing,\
                      \ allowing the system to leverage the flag in its rules and\
                      \ decision-making processes."
                    type: string
                  FraudMonitorStatusExpiryDate:
                    description: This field indicates the date on which the Fraud
                      Monitor Status expires.The value in this field will automatically
                      be removed when Fraud Monitor Status is removed from a card.
                    type: string
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : FraudStatus  value is invalid. Please provide a valid value.</em></li><li><em>HLXIDASBR001\
            \ : FraudReferStatus  value is invalid. Please provide a valid value.</em></li><li><em>HLXIDASBR001\
            \ : FraudReferStatusExpiryDate  must be in YYYY-MM-DD format.</em></li><li><em>HLXIDASBR001\
            \ : FraudMonitorStatus  value is invalid. Please provide a valid value.</em></li><li><em>HLXIDASBR001\
            \ : FraudMonitorStatusExpiryDate  must be in YYYY-MM-DD format.</em></li><li><em>HLXIDASFS004\
            \ : FraudReferStatusExpiryDate must be present or future date.</em></li><li><em>HLXIDASFS004\
            \ : FraudMonitorStatusExpiryDate must be present or future date.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASID003\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASFS001\
            \ : FraudStatus cannot be set to the same value.</em></li><li><em>HLXIDASFS002\
            \ : FraudReferStatus cannot be set to the same value.</em></li><li><em>HLXIDASFS003\
            \ : FraudMonitorStatus cannot be set to the same value.</em></li><li><em>HLXIDASFR002\
            \ : The card is already blocked as confirmed fraud.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC004\
            \ : Attempt to update the payment instrument information has failed due\
            \ to persistence error.</em></li><li><em>HLXIDASUP001 : Card Update failed\
            \ due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Manage Fraud
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/PINTryCounterReset/Execute:
    post:
      tags:
      - Helix Core
      summary: This API is used to reset the Invalid PIN Try Counter on a card to
        zero.
      operationId: resetInvalidPinTryCounter
      parameters:
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  FEPID:
                    description: Unique identifier of the payment instrument (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASID005 : Card blocked\
            \ as Lost.</em></li><li><em>HLXIDASID005 : Card blocked as Stolen.</em></li><li><em>HLXIDASPC006\
            \ : PIN Try Counter Reset is not allowed for suspected fraud cards.</em></li><li><em>HLXIDASPC007\
            \ : PIN Try Counter Reset is not allowed for confirmed fraud cards.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC004\
            \ : Attempt to update the payment instrument information has failed due\
            \ to persistence error.</em></li><li><em>HLXIDASUP001 : Card Update failed\
            \ due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Pin Try Counter Reset
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/Replace/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to replace a damaged card
      description: "This service allows the replacement of a card due to damage or\
        \ fault and is not intended for a lost or stolen scenario. The FEPID is to\
        \ be provided in the request message, and a successful request will result\
        \ in an identical card being sent to the customer, including PAN, PIN and\
        \ Expiry Date (your company's config may result in a new Expiry Date being\
        \ calculated if the card is due to expire soon)."
      operationId: replaceDamagedCard
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: idempotency-id
        in: header
        description: Idempotency ID
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  FepId:
                    description: Unique identifier of the payment card (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASCS001\
            \ : Card replacement failed, chip sequence exceeds maximum value.</em></li><li><em>HLXIDASAC001\
            \ : Account is closed.</em></li><li><em>HLXIDASCR002 : Replacement cannot\
            \ be processed for a non-physical card.</em></li><li><em>HLXIDASID009\
            \ : Card is cancelled.</em></li><li><em>HLXIDASRC001 : Replace Card is\
            \ not allowed for confirmed fraud cards.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASCR001\
            \ : Card Replacement failed due to persistence error.<li><em>HLXIDASCR001\
            \ : Attempt to replace the card has failed. Previous chip data is not\
            \ present.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "200":
          description: OK
      x-proxy-name: Replace a Damaged Card
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/Retrieve:
    get:
      tags:
      - Helix Core
      summary: This method is used to return the issued device details for the given
        FEPID
      description: This API allows the user to retrieve details of a specific card
        in the platform.
      operationId: getIssuedDevice
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  FepId:
                    description: Unique identifier of the payment instrument (FEPID)
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                    - $ref: "#/components/schemas/UUID"
                  Product:
                    description: Banking product associated with the payment instrument
                    type: string
                  RelatedAccount:
                    description: Account linked to the payment instrument. (FEAID)
                    type: string
                  Status:
                    description: Status of the payment instrument in the system. Possible
                      Response Values are <UL><LI><EM> ENAB (Enabled) </EM></LI> <LI><EM>
                      DISA (Disabled) </EM></LI> <LI><EM> DELE (Deleted) </EM></LI></UL>
                    type: string
                  StartDate:
                    description: Date when the payment instrument becomes available
                      for use (YYYY-MM-dd).
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                  ExpiryDate:
                    description: Date on which the payment instrument expires (YYYY-MM-dd).
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                  PriorCardExpiryDate:
                    description: Prior Date on which the payment instrument expires
                      (YYYY-MM-dd).
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                  Cardholder:
                    description: Party entitled to use the payment instrument (FECID)
                    type: string
                  CardholderType:
                    description: Indicates if the card holder of the account is a
                      Primary account Holder or an Additional Account Holder. Possible
                      Response Values are <UL><LI><EM> PRIM (Primary) </EM></LI> <LI><EM>
                      ADNL (Additional) </EM></LI></UL>
                    type: string
                  NameLine1:
                    description: Cardholder name as it appears on the card.
                    type: string
                  NameLine2:
                    description: Details on second name line as it appears on the
                      card.
                    type: string
                  PinOffset:
                    description: Data that system uses to calculate the Personal Identification
                      Number for the card.
                    type: string
                  ActivationStatus:
                    description: Indicates whether card activation needs to occur
                      for the most recently issued card. Possible Response Values
                      are <UL><LI><EM> ANED (ActivationNeeded) </EM></LI> <LI><EM>
                      ACMP (ActivationComplete) </EM></LI></UL>
                    type: string
                  ActivationDate:
                    description: Date when the payment instrument was activated (YYYY-MM-dd).
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                  Blocked:
                    description: Indicates whether payment instrument is blocked
                    type: string
                  BlockedReason:
                    description: Specifies the reason for which the payment instrument
                      is blocked. Accepted Values are <UL><LI><EM> Lost </EM></LI>
                      <LI><EM> Stolen </EM></LI></UL>
                    type: string
                  BlockedDateTime:
                    description: Date and time at which the payment instrument was
                      blocked (YYYY-MM-DDThh:mm:ss.sssZ).
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                  FinancialInstitution:
                    description: Identification of the financial institution associated
                      with the payment instrument
                    type: string
                  Brand:
                    description: Identification of the brand associated with the payment
                      instrument
                    type: string
                  PAN:
                    description: Long number that appears on the front of the card
                      (Primary Account Number) in masked form showing only the last
                      4 digits
                    type: string
                  PlasticCreationDateTime:
                    description: Date and time at which plastic created for the payment
                      instrument (YYYY-MM-DDThh:mm:ss.sssZ).
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                  CardTechnology:
                    description: Indicates the technology type supported by the physical
                      card.
                    type: string
                  Design:
                    description: Identification of card design associated with the
                      payment card.
                    type: string
                  LastCardActionProcessed:
                    description: The last action processed on the card.
                    type: string
                  TransferredToPaymentInstrument:
                    description: Identification of the new card after lost stolen
                      replacement
                    type: string
                  InvalidPinTryCounter:
                    format: int32
                    description: Number of Invalid PIN Tries before reset.
                    type: integer
                  LastInvalidPinTryDateTime:
                    description: Date and time when the Last Invalid PIN was attempted.
                      (YYYY-MM-DDThh:mm:ss.sssZ).
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                  DigitalCardType:
                    description: Identifies the type of digital card. Possible Response
                      Values are <UL><LI><EM> FTRM (FullTerm) </EM></LI> <LI><EM>
                      STRM (ShortTerm) </EM></LI> <LI><EM> TRAN (Transient) </EM></LI>
                      <LI><EM> NDIG (NonDigital) </EM></LI></UL>
                    type: string
                  ContactlessOptOutSwitch:
                    description: Indicates customer preference for contact versus
                      contactless card. This option can only be used if the product
                      supports contactless cards. Valid values are Yes and No. The
                      field is set to Yes if a customer wishes to opt out of contactless
                      card (i.e. they prefer to have contact only card). The field
                      is set to No if a customer wishes to opt in to contactless card.
                      The field will not be present in the response if there is no
                      customer preference.
                    type: string
                  IsCancelled:
                    description: This field indicates if a card is cancelled or not.
                      Valid values are Yes and No. This field will be set to Yes if
                      a card is cancelled.
                    type: string
                  CancellationDate:
                    description: Indicates date/time when a card was cancelled.
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                  FraudStatus:
                    description: This field indicates if a card is fraudulent or not.
                      Valid values are <UL><LI><EM> NONE (None) </EM></LI> <LI><EM>
                      SFRD (SuspectedFraud) </EM></LI> <LI><EM> CFRD (ConfirmedFraud)
                      </EM></LI> </UL>
                    type: string
                  FraudStatusDate:
                    description: Indicates date/time when fraud status was last updated.
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                  NbrActiveTokens:
                    format: int32
                    description: Number of active tokens for a card.
                    type: integer
                  FraudReferStatus:
                    description: |-
                      This field indicates whether a card is flagged to have all authorisations referred or not referred (anti-referred) to a fraud analyst for potential fraudulent activity. This flag is sent to the Falcon Fraud Manager system during authorisation processing where it can be used in the rules to make informed authorisation decisions.

                       Valid values are: <UL><LI><EM> NONE - No referral or anti-referral is assigned </EM></LI> <LI><EM> REFE - All authorizations are referred </EM></LI> <LI><EM> ANTI - No authorizations are referred (anti-refer) </EM></LI> </UL>
                    type: string
                  FraudReferStatusExpiryDate:
                    description: This field indicates the date on which the Fraud
                      Refer Status expires.
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                    - $ref: "#/components/schemas/LocalDate"
                  FraudMonitorStatus:
                    description: |-
                      The Fraud Monitor Status flag is a two-character alphanumeric field utilized to indicate whether a card is flagged for fraud monitoring. The values assigned to this field must be predefined within CMS module of FirstVision system. This flag is used in segmenting cards and implementing specific fraud minimization strategies within Falcon Fraud Manager system.

                      The Fraud Monitor Status flag is sent to the Falcon Fraud Manager system during authorisation processing, allowing the system to leverage the flag in its rules and decision-making processes
                    type: string
                  FraudMonitorStatusExpiryDate:
                    description: This field indicates the date on which the Fraud
                      Monitor Status expires.
                    type: string
                    allOf:
                    - $ref: '#/components/schemas/LocalDate'
                    - $ref: '#/components/schemas/LocalDate'
                    - $ref: '#/components/schemas/LocalDate'
                    - $ref: '#/components/schemas/LocalDate'
                    - $ref: '#/components/schemas/LocalDate'
                  Product Type:
                    description: Banking Product Type associated with the payment
                      instrument.
                    type: string
                  Balances:
                    description: The list contains detailed information about different
                      types of balance associated with the account.
                    type: array
                    items:
                      $ref: '#/components/schemas/Balance'
                  enabled:
                    type: boolean
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV002\
            \ : Cannot retrieve details, card is not enabled.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Inquire on Card Details
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/SystemUpdate:
    patch:
      tags:
      - Helix Core
      summary: This method is used to update payment instrument attributes as part
        of a system action/event.
      operationId: systemUpdate
      parameters:
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemUpdateRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  InvalidPinTryCounter:
                    format: int32
                    description: Number of times an authorisation with an invalid
                      PIN was attempted on the card.
                    type: integer
                  LastInvalidPinTryDateTime:
                    description: Date and time when the last authorisation with an
                      invalid PIN was attempted on the card.
                    type: string
                    allOf:
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                    - $ref: "#/components/schemas/Instant"
                  ChipData:
                    description: It's an object with chip sequence number and application
                      transaction counter value
                    type: object
                    allOf:
                    - $ref: "#/components/schemas/ChipData"
                    - $ref: "#/components/schemas/ChipData"
                    - $ref: "#/components/schemas/ChipData"
                    - $ref: "#/components/schemas/ChipData"
                    - $ref: "#/components/schemas/ChipData"
                  Cardholder:
                    description: "Party entitled to use the card (FECID).<br/><b>Note:</b>\
                      \ Person assigned to a Brand, can only be used when adding cards\
                      \ under the same Brand."
                    type: string
                  NbrActiveTokens:
                    format: int32
                    description: Number of active tokens for a card.
                    type: integer
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASID010\
            \ : &lt;attribute&gt; cannot be removed from Card</em></li><li><em>HLXIDASBR001\
            \ : Cardholder is not valid, please provide valid value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPA002\
            \ : Person not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASPA005 : Person <person-id>\
            \ not found under Financial Institution <fi-id>. </em></li><li><em>HLXIDASPA006\
            \ : Person <person-id> not linked to Brand <brand-id>. </em></li><li><em>HLXIDASPA006\
            \ : New Cardholder Brand conflicts with the Brand assigned to the card.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC004\
            \ : Attempt to update the payment instrument information has failed due\
            \ to persistence error.</em></li><li><em>HLXIDASUP001 : Card Update failed\
            \ due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: System Update
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/Update:
    patch:
      tags:
      - Helix Core
      summary: This method is used to update the issued device information
      operationId: updateIssuedDeviceInfo
      parameters:
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          type: string
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IssuedDeviceUpdateRequest"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  FepId:
                    description: Unique identifier of the payment instrument (FEPID)
                    type: string
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                  NewFepId:
                    description: Unique identifier of the new payment instrument (FEPID)
                    type: string
                    allOf:
                    - $ref: '#/components/schemas/UUID'
                  ActivationStatus:
                    description: Indicates whether card activation needs to occur
                      for the most recently issued card. Possible Response Values
                      are <UL><LI><EM> ANED (ActivationNeeded) </EM></LI> <LI><EM>
                      ACMP (ActivationComplete) </EM></LI></UL>
                    type: string
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li><li><em>HLXIDASBR001 : Name Line 1 less than\
            \ minimum length allowed.</em></li><li><em>HLXIDASBR001 : Name Line 1\
            \ exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001 : Name\
            \ Line 2 less than minimum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Name Line 2 exceeds maximum length allowed.</em></li><li><em>HLXIDASBR001\
            \ : Cardholder is not valid, please provide valid value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC001\
            \ : No value provided for update.</em></li><li><em>HLXIDASPC005 : Card\
            \ is cancelled.</em></li><li><em>HLXIDASUN001 : Update Name is not allowed\
            \ for confirmed fraud cards.</em></li><li><em>HLXIDASCC002 : Cancel Card\
            \ is not allowed for confirmed fraud cards.</em></li><li><em>HLXIDASBL001\
            \ : Card blocked as Lost, name update not allowed.</em></li><li><em>HLXIDASBL001\
            \ : Card blocked as Stolen, name update not allowed.</em></li><li><em>HLXIDASBL001\
            \ : The card is blocked as Lost and is replaced. Card cancellation is\
            \ not allowed.</em></li><li><em>HLXIDASBL001 : The card is blocked as\
            \ Stolen and is replaced. Card cancellation is not allowed.</em></li><li><em>HLXIDASPA006\
            \ : New Cardholder Brand conflicts with the Brand assigned to the card.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASPC004\
            \ : Attempt to update the payment instrument information has failed due\
            \ to persistence error.</em></li><li><em>HLXIDASUP001 : Card Update failed\
            \ due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Update a Card
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/Validate:
    get:
      tags:
      - Helix Core
      summary: This method is used to validate the payment instrument for the given
        FEPID
      description: This API allows the user to validate the payment instrument for
        the given FEPID <br/><br/><i> <b>Note</b>:This API is for Internal purpose
        only.</i>
      operationId: validatePaymentInstrument
      parameters:
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          type: string
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASID003\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASID005 : Card is blocked\
            \ as Lost.</em></li><li><em>HLXIDASID005 : Card is blocked as Stolen.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASID006\
            \ : There is an error while validating Payment Instrument, please try\
            \ again.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Validate card status
      x-group-name: Card Management
      x-api-scope: Internal
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/ViewPAN/Request:
    get:
      tags:
      - Helix Core
      summary: This API allows the user to retrieve clear PAN for the given FEPID.
      description: This API allows the user to retrieve clear PAN (Primary Account
        Number) of a specific card on the platform.
      operationId: getClearPan
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetrieveClearPanResponse"
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV002\
            \ : Cannot retrieve details, card is not enabled.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: Retrieve PAN
      x-group-name: Card Management
  /IssuedDeviceAdmin/V1/PaymentInstrument/{paymentInstrumentId}/ViewPIN/Request:
    post:
      tags:
      - Helix Core
      summary: This method is used to View Pin in Encrypted form for the given FEPID
      description: This API retrieves the PIN (for use in a secure environment) for
        a card. Encryption keys and method must be known to use this API.
      operationId: viewPin
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestViewPinRequest"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  EncryptedPIN:
                    type: string
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBR001\
            \ : Card not found.</em></li><li><em>HLXIDASBR001 : RSA Public Key required,\
            \ please provide value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBU001\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASBV001\
            \ : Card is not enabled.</em></li><li><em>HLXIDASID005 : Card is blocked\
            \ as Lost.</em></li><li><em>HLXIDASID005 : Card is blocked as Stolen.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXIDASVP001\
            \ : - Attempt to view Encrypted Pin has failed due to persistence error.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelixErrorDetails"
      x-proxy-name: View PIN request
      x-group-name: Card Sensitive Data
components:
  schemas:
    Account:
      description: "An Account is Record of transactions in specific types of assets,\
        \ maintained by a servicing party on behalf of one or more owning parties."
      type: object
      properties:
        AccountIdentification:
          description: "Unique identifier of an account, as assigned by the account\
            \ servicer (FEAID)"
          maxLength: 37
          type: string
        FinancialInstitution:
          description: Brand to which the Account belongs
          maxLength: 37
          type: string
        Brand:
          description: Identification of the brand associated with the person
          maxLength: 37
          type: string
        Product:
          description: Product to which the Account belongs
          maxLength: 37
          type: string
        Status:
          description: Status of the Account entity in the system
          type: string
        CardAccountType:
          description: Type of cardholder account used for the transaction
          type: string
    AddCapabilityCatalogResponse:
      type: object
      properties:
        CPID:
          description: Capability Catalog ID - Unique identifier for the Capability
            Catalog
          type: string
    AddCardRequest:
      required:
      - Brand
      - Product
      - Cardholder
      - CardholderType
      type: object
      properties:
        Brand:
          description: Identification of the brand associated with the payment card
          type: string
        Product:
          description: Banking product associated with the payment card
          type: string
        RelatedAccount:
          description: Account linked to the card. (FEAID)
          type: string
        Cardholder:
          description: "Party entitled to use the card (FECID).<br/><b>Note:</b> Person\
            \ assigned to a Brand, can only be used when adding cards under the same\
            \ Brand."
          type: string
        CardholderType:
          description: Indicates if the card being added is of type Primary or Additional.
            Accepted Values are <UL><LI><EM> PRIM (Primary) </EM></LI> <LI><EM> ADNL
            (Additional) </EM></LI></UL>
          type: string
        NameLine1:
          description: Cardholder name as it appears on the card
          type: string
        NameLine2:
          description: Details on second name line as it appears on the card
          type: string
        CardMaintenanceWaiveFlag:
          description: Flag to describe if the Card Maintenance Fee to be waived once
            or permanent. Accepted Values are <UL><LI><EM> ONCE </EM></LI> <LI><EM>
            PERM (Permanent) </EM></LI></UL>
          type: string
        ContactlessOptOutSwitch:
          description: Indicates customer preference for contact versus contactless
            card. This option can only be used if the product supports contactless
            cards. Valid values are Yes and No. The field should be set to Yes if
            a customer wishes to opt out of contactless card (i.e. they prefer to
            have contact only card). The field should be set to No if a customer wishes
            to opt in to contactless card.
          type: string
        OverrideParameterValues:
          type: array
          items:
            $ref: "#/components/schemas/OverrideParameter"
        Bundle:
          description: "Bundles are a collection of multiple Features, that can be\
            \ used to further segment a Product, in order to provide alternate set(s)\
            \ of features to customers compared to the Product default Features. For\
            \ example different card types (virtual/physical), card designs, card\
            \ fees etc. or any combination of these during the onboarding process."
          type: array
          items:
            $ref: "#/components/schemas/BundleRequestDto"
    AddCardRequestEvent:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        ProductId:
          type: string
        FEPID:
          description: Unique identifier of the payment card (FEPID)
          type: string
        FEAID:
          description: Identification of the account
          type: string
        FECID:
          description: Identification of the cardholder
          type: string
        CreatedDateTime:
          description: "Time when the Add card request raised (YYYY-MM-DDThh:mm:ss.sssZ)."
          type: string
          allOf:
          - $ref: "#/components/schemas/Instant"
        FailedDateTime:
          description: "Time when the Add card request failed (YYYY-MM-DDThh:mm:ss.sssZ)."
          type: string
          allOf:
          - $ref: "#/components/schemas/Instant"
        CardTechnologyType:
          description: Indicates the technology type supported by the physical card
          type: string
        DigitalCardType:
          description: Indicates the type of digital card
          type: string
        CardholderType:
          description: Indicates the cardholder type
          type: string
        ActivationStatus:
          description: Indicates the activation status of the card
          type: string
        CardMaintenanceWaiveFlag:
          description: Flag to describe the type of Card Maintenance Waive Fee
          type: string
        FeatureOverrideDto:
          description: List of feature overridden in request
          type: array
          items:
            $ref: "#/components/schemas/FeatureOverride"
    AddCardResponse:
      type: object
      properties:
        FepId:
          description: Unique identifier for a Card.
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
        ActivationStatus:
          description: Indicates whether card activation needs to occur for the most
            recently issued card. Possible Response Values are <UL><LI><EM> ANED (ActivationNeeded)
            </EM></LI> <EM><LI> ACMP (ActivationComplete) </EM></LI></UL>
          type: string
        PAN:
          description: "Long number that appears on the front of the card (Primary\
            \ Account Number).</br> Notes: </br> <ul><li>PAN is returned in clear.</li></ul>"
          type: string
        CardholderType:
          description: Indicates if the card holder of the account is a Primary account
            Holder or an Additional Account Holder. Possible Response Values are:</br><ul><li>PRIM
            (Primary)</li><li>ADNL (Additional)</li></ul>
          type: string
        CardTechnology:
          description: Indicates the technology type supported by the physical card.
          type: string
        DigitalCardType:
          description: Identifies the type of digital card. Possible values are:</br><ul><li>FTRM
            (FullTerm)</li><li>STRM (ShortTerm)</li><li>TRAN (Transient)</li><li>NDIG
            (NonDigital)</li></ul>
          type: string
        NameLine1:
          description: Cardholder name as it appears on the card.
          type: string
        NameLine2:
          description: Details on second name line as it appears on the card.
          type: string
    AddOrganisationResponse:
      type: object
      properties:
        FEOID:
          description: Fiserv Enterprise Organisation ID - Unique identifier for the
            organisation
          type: string
    Amount:
      type: object
      properties:
        Value:
          description: Represents the monetary value associated.
          default: 0
          type: number
        Currency:
          description: "Represents the currency associated, expressed in ISO 4217\
            \ currency code."
          type: string
    Balance:
      type: object
      properties:
        BalanceType:
          description: "This refers to the category for which various types of balances\
            \ are retrieved. If the balance type is TOTAL, all position types will\
            \ be considered during balance calculation. If the balance type is CASH,\
            \ then only the position type CASH will be considered during balance calculation.\
            \ Possible values are: <ul> <li>TOTAL </li> <li> CASH. </li> </ul>"
          type: string
          allOf:
          - $ref: '#/components/schemas/BalanceType'
        CurrentBalance:
          description: This field represents the total outstanding balance for an
            account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount'
        PendingBalance:
          description: This field represents the pending (uncleared) balance for an
            account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount'
        AvailableBalance:
          description: This field represents the available to spend balance for an
            account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount'
        Limit:
          description: This field represents the maximum limit for a given balance
            type associated with an account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount'
    BalanceType:
      enum:
      - TOTAL
      - CASH
      type: string
    Bundle:
      type: object
      properties:
        Identification:
          type: string
    BundleCommonDto:
      type: object
      properties:
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the product
          type: string
        Identification:
          description: Identification of a bundle
          type: string
        Name:
          description: Name of the bundle
          type: string
        Description:
          description: Description of a bundle
          type: string
        Status:
          description: Status of a bundle
          type: string
        Feature:
          description: List of linked features
          type: array
          items:
            $ref: "#/components/schemas/Feature1"
    BundleRequestDto:
      required:
      - Identification
      type: object
      properties:
        Identification:
          description: "<em> maxLength: 37 </em> <br> Identification of bundles to\
            \ be processed for the card"
          type: string
    CapabilityCatalog:
      required:
      - Version
      - CapabilityName
      type: object
      properties:
        Version:
          description: Version of the Capability
          pattern: \S
          type: string
        CapabilityName:
          description: Name of the Capability
          pattern: \S
          type: string
        CapabilityDefinition:
          description: Definition of Capability
          type: string
    CardDeleteRequest:
      required:
      - FEPID
      type: object
      properties:
        FEPID:
          description: Unique identifier for the payment instrument (FEPID)
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        SkipFacilityAllocationDeletion:
          description: Boolean that indicate whether to skip facility allocation deletion.
            Accepted Values are <UL><LI><EM> true </EM></LI> <LI><EM> false </EM></LI></UL>
          pattern: ^(true|false)$
          type: string
    CardFraudStatusEvent:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        PrimaryAccountNumber:
          type: string
        CardholderType:
          type: string
        CardTechnologyType:
          type: string
        FEAID:
          type: string
        FECID:
          type: string
        FEPID:
          type: string
        CardHolderName:
          type: string
    ChipData:
      type: object
      properties:
        ApplicationTxnCntr:
          description: Application Transaction Counter
          type: string
        Chip:
          description: Chip Sequence Number
          type: string
        SentScript:
          description: |-
            Issuer script that has already been sent to the card, during a previous online contact authorisation.<br> Valid values are: <UL><LI> CARD BLOCK - This script when sent to the card, will shut down all proprietary and non-proprietary applications that reside on the card, to prevent further use of the card.</LI> <LI> PIN CHANGE -  This script when sent to the card, can be used to change the offline PIN as well as reset the PIN Try Counter.</LI> <LI> PIN UNBLOCK -  This script when sent to the card, can be used to reset the PIN Try Counter, to enable usage of the card on offline terminals.
            </LI> </UL>
          pattern: (^$|CARD BLOCK|PIN CHANGE|PIN UNBLOCK)
          type: string
          example: CARD BLOCK
        StagedScript:
          description: |-
            Issuer script that is pending delivery to the card, upon the receipt of the next online contact authorisation.<br> Valid values are: <UL><LI> CARD BLOCK - This script when sent to the card, will shut down all proprietary and non-proprietary applications that reside on the card, to prevent further use of the card.</LI> <LI> PIN CHANGE -  This script when sent to the card, can be used to change the offline PIN as well as reset the PIN Try Counter.</LI> <LI> PIN UNBLOCK -  This script when sent to the card, can be used to reset the PIN Try Counter, to enable usage of the card on offline terminals.
            </LI> </UL>
          pattern: (^$|CARD BLOCK|PIN CHANGE|PIN UNBLOCK)
          type: string
          example: CARD BLOCK
    CommonChipDataResponse:
      type: object
      properties:
        PaymentInstrument:
          type: string
        ChipSequence:
          type: string
        ChipStatus:
          type: string
        CreationDate:
          type: string
        ExpiryDate:
          type: string
        Product:
          type: string
        PinTryLimit:
          type: string
        OfflinePin:
          type: string
        MagneticStripeImageSecurityCode:
          type: string
        LanguagePreference:
          type: string
        Version:
          type: string
        CryptogramKeyIndex:
          type: string
        CryptogramVersion:
          type: string
        MacKeyIndex:
          type: string
        EncryptionKeyIndex:
          type: string
        Lcol:
          type: string
        Ucol:
          type: string
        StagedScript:
          type: string
        SentScript:
          type: string
    ConfigurationOption:
      required:
      - Name
      - ConfigurationParameter
      type: object
      properties:
        Name:
          description: Name of a configuration option
          pattern: \S
          type: string
        ConfigurationParameter:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationParameter"
    ConfigurationOption1:
      required:
      - Name
      - ConfigurationParameter
      type: object
      properties:
        Name:
          description: Name of a configuration option
          pattern: \S
          type: string
        Specification:
          description: Description of a configuration option
          type: string
        Value:
          description: Value of a configuration option
          type: string
        ConfigurationParameter:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationParameter"
    ConfigurationParameter:
      description: Parameter used for configuring options
      required:
      - Name
      - Value
      type: object
      properties:
        Name:
          description: Name of a configuration parameter
          maxLength: 35
          pattern: \S
          type: string
        Value:
          description: Value of a configuration parameter
          maxLength: 40000
          pattern: \S
          type: string
    DeactivatePostalAddressRequest:
      required:
      - AddressType
      type: object
      properties:
        AddressType:
          description: "Type of address<br/> Valid values are : <br/> HOME - Current\
            \ Residential <br/> BIZZ - Business <br/> REGR - Registered Residential"
          pattern: \S
          type: string
    DefaultFeatureChangedEvent:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        RequestId:
          type: string
        FIID:
          description: Financial Institution Identification
          type: string
        Product:
          description: Product Identification
          type: string
        ProductFeatures:
          description: List of Product Features
          type: array
          items:
            $ref: '#/components/schemas/ProductFeatureDefaults'
    ElectronicAddress:
      required:
      - Type
      - Email
      - ContactPreference
      type: object
      properties:
        Type:
          description: "Type of email <br/> Valid values are : <br/> PERS - Personal\
            \ Email <br/> WORK - Work Email"
          pattern: \S
          type: string
        Email:
          description: "<em> maxLength: 256 </em> <br/> Address for electronic mail\
            \ (e-mail)"
          type: string
        ContactPreference:
          description: "Indicates whether the person prefer to be contacted on this\
            \ email address<br/> Valid values are : <br/> PREF - Preferred for contact\
            \ (at least one email should have this preference) <br/> MAYB - May be\
            \ used for contact (When one email is set as preferred contact, rest of\
            \ the email should have this preference)"
          type: string
    ElectronicAddressDtoUpdateRequest:
      required:
      - Type
      - Email
      - ContactPreference
      type: object
      properties:
        Type:
          description: "Type of email <br/> Valid values are : <br/>PERS - Personal\
            \ Email <br/> WORK - Work Email"
          pattern: \S
          type: string
        Email:
          description: "<em> maxLength: 256 </em> <br/> Address for electronic mail\
            \ (e-mail)"
          pattern: \S
          type: string
        ContactPreference:
          description: "Indicates whether the person prefer to be contacted on this\
            \ email address<br/> Valid values are : <br/> PREF - Preferred for contact\
            \ <br/> MAYB - May be used for contact"
          pattern: \S
          type: string
    ErrorEvent:
      type: object
      properties:
        ServiceDomain:
          description: Specifies the service domain
          type: string
        ServiceDomainIdentifier:
          description: Specifies the service domain identifier
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
        ServiceDomainIdentifierName:
          description: Specifies the service domain identifier name
          type: string
        Action:
          description: Action that was in progress when this error happened
          type: string
        ErrorReason:
          description: Specifies the error reason
          type: string
        FailedDateTime:
          description: Time when error occured (YYYY-MM-DDThh:mm:ss.sssZ).
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDateTime"
    ExecuteActivateCardResponse:
      type: object
      properties:
        FepId:
          description: Unique identifier of the payment card (FEPID)
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
    ExecuteChangePINRequest:
      required:
      - CurrentPINBlock
      - RequiredPINBlock
      - KeyAssociation
      type: object
      properties:
        CurrentPINBlock:
          description: "Current PIN block is composed of the old PIN details, which\
            \ customer want to change."
          type: string
        RequiredPINBlock:
          description: "Required PIN block is composed of the new PIN details, which\
            \ customer provides as input to change the existing PIN."
          type: string
        KeyAssociation:
          description: Used to identify PIN block encryption keys.
          type: string
    ExecuteContactLessOptRequest:
      required:
      - ContactlessOptOutSwitch
      - ReplaceCard
      type: object
      properties:
        ContactlessOptOutSwitch:
          description: Indicates customer preference for contact versus contactless
            card. This option can only be used if the product supports contactless
            cards. Valid values are Yes and No. The field should be set to Yes if
            a customer wishes to opt out of contactless card (i.e. they prefer to
            have contact only card). The field should be set to No if a customer wishes
            to opt in to contactless card.
          pattern: (^$|Yes|No)
          type: string
        ReplaceCard:
          description: Identifies whether a replacement card needs to be created and
            sent to cardholder. Accepted Values are <UL><LI><EM> Yes </EM></LI> <LI><EM>
            No </EM></LI></UL>
          pattern: (^$|Yes|No)
          type: string
    ExecuteContactLessOptResponse:
      type: object
      properties:
        FEPID:
          description: Unique identifier of the payment card (FEPID)
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
        ContactlessOptOutSwitch:
          description: Indicates customer preference for contact versus contactless
            card.
          type: string
        CardReplaced:
          description: Indicates whether card has been replaced or not
          type: boolean
    ExecuteDeactivateCardResponse:
      type: object
      properties:
        FepId:
          description: Unique identifier of the payment card (FEPID)
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
    ExecuteDeletePersonRequest:
      required:
      - FECID
      type: object
      properties:
        FECID:
          description: Unique identifier of the Person (FECID)
          type: string
    ExecuteFraudRequest:
      required:
      - FraudStatus
      - ReplaceCard
      type: object
      properties:
        FraudStatus:
          description: This field identifies the type of fraud status on the selected
            card. Valid Values are <UL><LI><EM> NONE (None) </EM></LI> <LI><EM> SFRD
            (SuspectedFraud) </EM></LI> <LI><EM> CFRD (ConfirmedFraud) </EM></LI>
            </UL>
          type: string
        ReplaceCard:
          description: To identify whether a replacement card needs to be created
            and sent to cardholder. New PIN will be issued with a replacement card.
            Valid values are <UL><LI><EM> Yes </EM></LI> <LI><EM> No </EM></LI></UL>
          type: string
    ExecuteFraudResponse:
      type: object
      properties:
        FEPID:
          description: Unique identifier of the payment instrument (FEPID)
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
        FraudStatus:
          description: This field indicates if a card is fraudulent or not. Valid
            values are <UL><LI><EM> NONE (None) </EM></LI> <LI><EM> SFRD (SuspectedFraud)
            </EM></LI> <LI><EM> CFRD (ConfirmedFraud) </EM></LI> </UL>
          type: string
        NewFEPID:
          description: Unique identifier of the new payment instrument (FEPID)
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
        ActivationStatus:
          description: Indicates whether card activation needs to occur for the most
            recently issued card. Possible Response Values are <UL><LI><EM> ANED (ActivationNeeded)
            </EM></LI> <LI><EM> ACMP (ActivationComplete) </EM></LI></UL>
          type: string
    ExecutePINTryCounterResetResponse:
      type: object
      properties:
        FEPID:
          description: Unique identifier of the payment instrument (FEPID)
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
    ExecuteReplaceCardResponse:
      type: object
      properties:
        FepId:
          description: Unique identifier of the payment card (FEPID)
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
    ExecuteUnlinkBundleFeatureRequest:
      type: object
      properties:
        Feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    ExecuteUnlinkProductFeatureRequest:
      required:
      - RequestType
      type: object
      properties:
        Feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        RequestType:
          description: Request Type of Unlink Feature
          minLength: 1
          type: string
    ExecuteUnlinkProductFeatureResponse:
      type: object
      properties:
        Feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
        RequestType:
          description: Request Type of Unlink Feature
          type: string
    ExternalIdentification:
      required:
      - TypeOfIdentificationCode
      - Identification
      type: object
      properties:
        TypeOfIdentificationCode:
          description: Specifies the type of external identification. E.g. CRIM (Customer
            Relationship Management system assigned identifier). <br>Accepted Values
            are <UL><LI><EM> AMID - Account Management Identification </EM></LI> <LI><EM>
            CRID - CRM id as generated in the FI’s Customer Relationship management
            (CRM) system </EM></LI></UL>
          pattern: \S
          type: string
        Identification:
          description: Specifies the value of the External Identification.
          maxLength: 37
          pattern: \S
          type: string
    ExternalIdentificationUpdateDto:
      required:
      - TypeOfIdentificationCode
      - Identification
      type: object
      properties:
        TypeOfIdentificationCode:
          description: Specifies the type of external identification. E.g. CRIM (Customer
            Relationship Management system assigned identifier). <br>Accepted Values
            are <UL><LI><EM> AMID - Account Management Identification </EM></LI> <LI><EM>
            CRID - CRM id as generated in the FI’s Customer Relationship management
            (CRM) system </EM></LI></UL>
          pattern: \S
          type: string
        Identification:
          description: Specifies the value of the External Identification.
          maxLength: 37
          type: string
    Feature:
      required:
      - Identification
      type: object
      properties:
        Identification:
          description: Identification of a feature
          maxLength: 37
          minLength: 1
          type: string
    Feature1:
      type: object
      properties:
        Identification:
          description: Identification of the feature
          type: string
        Name:
          description: Name of the feature
          type: string
        Specification:
          description: Specification of a feature
          type: string
        Capability:
          description: Name of the system capability linked to a feature
          type: string
        CapabilityVersion:
          description: Version of the system capability linked to a feature
          type: string
    Feature2:
      type: object
      properties:
        Identification:
          description: Identification of the feature
          type: string
        Name:
          description: Name of a feature
          type: string
        Specification:
          description: Description of a feature
          type: string
        Capability:
          description: Name of the system capability linked to a feature
          type: string
        DefaultIndicator:
          description: Flag to indicate default feature
          type: boolean
    Feature3:
      required:
      - Identification
      type: object
      properties:
        Identification:
          description: Identification of a feature
          maxLength: 37
          minLength: 1
          pattern: ^\S*$
          type: string
        DefaultIndicator:
          description: Default feature indicator
          type: string
        RatificationMethod:
          description: Ratification Method
          type: string
    FeatureOverride:
      type: object
      properties:
        Feature:
          description: Identification of Feature
          type: string
        AgreementFeatureId:
          description: Id of Agreement Feature
          type: string
        CapabilityName:
          description: Capability name
          type: string
        CapabilityVersion:
          description: Capability version
          type: string
    FeatureToProductLinkingRequest:
      required:
      - Feature
      type: object
      properties:
        Feature:
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Feature3'
    FeatureToProductLinkingResponse:
      type: object
      properties:
        Warning:
          $ref: '#/components/schemas/Warning1'
    FraudStatusUpdateEvent:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        PaymentInstrumentID:
          type: string
        FraudStatus:
          type: string
        FraudReferStatus:
          type: string
        FraudReferStatusExpiryDate:
          type: string
        FraudMonitorStatus:
          type: string
        FraudMonitorStatusExpiryDate:
          type: string
    FraudStatusUpdateRequest:
      type: object
      properties:
        FraudStatus:
          description: "This field identifies the specific type of fraud status assigned\
            \ to a card. <p>Valid Values:</p><UL><LI><EM> NONE-Indicates that no fraud\
            \ status has been assigned to the card. </EM></LI> <LI><EM> SFRD-Denotes\
            \ that the card has been flagged as suspected fraud, necessitating further\
            \ investigation and verification to confirm any fraudulent activity. </EM></LI>\
            \ <LI><EM> CFRD-Indicates that the card has been verified and confirmed\
            \ as involved in fraudulent activities. </EM></LI> </UL>Note: Suspected\
            \ Fraud (SFRD) status cannot override Confirmed Fraud (CFRD) status. Confirmed\
            \ Fraud status cannot be removed from the card once set. When Confirmed\
            \ Fraud status is applied, the system will automatically set Block Reason\
            \ on the card to Stolen."
          type: string
        FraudReferStatus:
          description: This field indicates whether a card is flagged to have all
            authorisations referred or not referred (anti-referred) to a fraud analyst
            for potential fraudulent activity. This flag is sent to the Falcon Fraud
            Manager system during authorisation processing where it can be used in
            the rules to make informed authorisation decisions.<p>Valid Values:</p><UL><LI><EM>
            NONE-No referral or anti-referral is assigned.</EM></LI> <LI><EM> REFE-All
            authorizations are referred. </EM></LI> <LI><EM> ANTI-No authorizations
            are referred(anti-refer). </EM></LI> </UL>
          type: string
        FraudReferStatusExpiryDate:
          description: "This field indicates the date on which the Fraud Refer Status\
            \ expires.This field is required and must be set to a present or future\
            \ date when Fraud Refer Status is set to REFE or ANTI. \nThe value in\
            \ this field will automatically be removed when Fraud Refer Status is\
            \ updated to NONE."
          type: string
        FraudMonitorStatus:
          description: "The Fraud Monitor Status flag is a two-character alphanumeric\
            \ field utilized to indicate whether a card is flagged for fraud monitoring.\
            \ This flag is used in order to implement specific fraud minimization\
            \ strategies within Falcon Fraud Manager system.The Fraud Monitor Status\
            \ flag is sent to Falcon Fraud Manager system during authorisation processing,\
            \ allowing the system to leverage the flag in its rules and decision-making\
            \ processes."
          type: string
        FraudMonitorStatusExpiryDate:
          description: |-
            This field indicates the date on which the Fraud Monitor Status expires.This field is required and must be set to a present or future date when Fraud Monitor Status is set to any valid value other than null.
            The value in this field will automatically be removed when Fraud Monitor Status is removed from a card.
          type: string
    FraudStatusUpdateResponse:
      type: object
      properties:
        FraudStatus:
          description: "This field identifies the specific type of fraud status assigned\
            \ to a card. Possible responses:<UL><LI><EM> NONE-Indicates that no fraud\
            \ status has been assigned to the card. </EM></LI> <LI><EM> SFRD-Denotes\
            \ that the card has been flagged as suspected fraud, necessitating further\
            \ investigation and verification to confirm any fraudulent activity. </EM></LI>\
            \ <LI><EM> CFRD-Indicates that the card has been verified and confirmed\
            \ as involved in fraudulent activities. </EM></LI> </UL>"
          type: string
        FraudReferStatus:
          description: <p>This field indicates whether a card is flagged to have all
            authorisations referred or not referred (anti-referred) to a fraud analyst
            for potential fraudulent activity. This flag is sent to the Falcon Fraud
            Manager system during authorisation processing where it can be used in
            the rules to make informed authorisation decisions.</p>Possible responses:<UL><LI><EM>
            NONE-No referral or anti-referral is assigned.</EM></LI> <LI><EM> REFE-All
            authorizations are referred. </EM></LI> <LI><EM> ANTI-No authorizations
            are referred (anti-refer). </EM></LI> </UL>
          type: string
        FraudReferStatusExpiryDate:
          description: This field indicates the date on which the Fraud Refer Status
            expires.
          type: string
        FraudMonitorStatus:
          description: "The Fraud Monitor Status flag is a two-character alphanumeric\
            \ field utilized to indicate whether a card is flagged for fraud monitoring.This\
            \ flag is used in order to implement specific fraud minimization strategies\
            \ within Falcon Fraud Manager system.<br/>The Fraud Monitor Status flag\
            \ is sent to Falcon Fraud Manager system during authorisation processing,\
            \ allowing the system to leverage the flag in its rules and decision-making\
            \ processes."
          type: string
        FraudMonitorStatusExpiryDate:
          description: This field indicates the date on which the Fraud Monitor Status
            expires.The value in this field will automatically be removed when Fraud
            Monitor Status is removed from a card.
          type: string
    HelixErrorDetails:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/HelixMessage"
    HelixMessage:
      type: object
      properties:
        errorCode:
          type: string
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
    Instant:
      format: date-time
      type: string
      example: 2022-03-10T16:15:50Z
    IssuedDeviceActionRequest:
      required:
      - BlockReason
      - ReplaceCard
      - GenerateNewPin
      type: object
      properties:
        BlockReason:
          description: To set the type of loss status on the selected card. Accepted
            Values are <UL><LI><EM> Lost </EM></LI> <LI><EM> Stolen </EM></LI></UL>
          pattern: (^$|Lost|Stolen)
          type: string
        ReplaceCard:
          description: To identify whether a replacement card need to be created and
            sent to cardholder. Accepted Values are <UL><LI><EM> Yes </EM></LI> <LI><EM>
            No </EM></LI></UL>
          minLength: 1
          pattern: (^$|Yes|No)
          type: string
        GenerateNewPin:
          description: To identify whether a replacement PIN needs to be generated
            and sent to the cardholder when PIN is compromised or whether the existing
            PIN will be reused when PIN is not compromised.Accepted Values are <UL><LI><EM>
            Yes </EM></LI> <LI><EM> No </EM></LI></UL>
          minLength: 1
          pattern: (^$|Yes|No)
          type: string
        CardMaintenanceWaiveFlag:
          description: Flag to describe if the Lost/Stolen Fee to be waived. Accepted
            Value is <UL><LI><EM> ONCE </EM></LI></UL>
          pattern: (^$|Yes|No)
          type: string
    IssuedDeviceActionResponse:
      type: object
      properties:
        FepId:
          description: Unique identifier of the payment instrument (FEPID)
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
        NewFepId:
          description: Unique identifier of the new payment instrument (FEPID)
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
        ActivationStatus:
          description: Indicates whether card activation needs to occur for the most
            recently issued card. Possible Response Values are <UL><LI><EM> ANED (ActivationNeeded)
            </EM></LI> <LI><EM> ACMP (ActivationComplete) </EM></LI></UL>
          type: string
    IssuedDeviceUpdateRequest:
      type: object
      properties:
        NameLine1:
          description: Cardholder name as it appears on the card
          maximum: 26
          minimum: 2
          type: string
        NameLine2:
          description: Details on second name line as it appears on the card.
          type: string
        isCancelled:
          description: This field indicates if a card is cancelled or not. This field
            will be set to Yes if a card is cancelled. A cancelled card cannot be
            activated once it has been set.
          type: string
        Cardholder:
          description: "Party entitled to use the card (FECID).<br/><b>Note:</b> A\
            \ Person assigned to a Brand, can only be assigned to cards within the\
            \ same Brand."
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
    LinkBundleFeatureRequest:
      required:
      - Feature
      type: object
      properties:
        Feature:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Feature"
    LocalDate:
      format: date
      type: string
      example: 2022-03-10
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    MasterCardChipDataResponse:
      type: object
      properties:
        PaymentInstrument:
          type: string
        ChipSequence:
          type: string
        ChipStatus:
          type: string
        CreationDate:
          type: string
        ExpiryDate:
          type: string
        Product:
          type: string
        PinTryLimit:
          type: string
        OfflinePin:
          type: string
        MagneticStripeImageSecurityCode:
          type: string
        LanguagePreference:
          type: string
        Version:
          type: string
        CryptogramKeyIndex:
          type: string
        CryptogramVersion:
          type: string
        MacKeyIndex:
          type: string
        EncryptionKeyIndex:
          type: string
        Lcol:
          type: string
        Ucol:
          type: string
        StagedScript:
          type: string
        SentScript:
          type: string
        Ndcf:
          type: string
        Lcota:
          type: string
        Ucota:
          type: string
        Mota:
          type: string
        Atc:
          format: int32
          type: integer
        A2ll:
          type: string
        A2ul:
          type: string
        C2ll:
          type: string
        C2ul:
          type: string
        Iesw:
          type: string
        Mtacc:
          type: string
        Mtancc:
          type: string
        Mtaccl:
          type: string
        Mtanccl:
          type: string
        OllDays:
          type: string
        PartialAuthorization:
          type: string
        enabled:
          type: boolean
    OverrideParameter:
      required:
      - CapabilityName
      type: object
      properties:
        CapabilityName:
          description: Name of the system capability linked to a feature
          maxLength: 35
          pattern: \S
          type: string
        ConfigurationOption:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationOption"
    Party:
      required:
      - Identification
      type: object
      properties:
        Identification:
          description: Unique identifier for the person (FECID)
          maxLength: 37
          pattern: \S
          type: string
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the person
          type: string
        Brand:
          description: Identification of the brand associated with the person
          type: string
        Status:
          description: Status of the person record in the system
          type: string
        NamePrefix:
          description: Specifies the terms used to formally address a person.
          type: string
        GivenName:
          description: First name of a person.
          type: string
        MiddleName:
          description: Second name of a person.
          type: string
        Surname:
          description: "Surname is a name added to a given name and is part of a personal\
            \ name. In many cases, a surname is a family name."
          type: string
        Language:
          description: Language in which a person communicates.
          type: string
        Gender:
          description: Specifies the gender of the person.
          type: string
        MemorableWord:
          description: Memorable word selected by the customer to be used for customer
            authentication.
          type: string
    PaymentInstrumentGetListRequest:
      type: object
      properties:
        Account:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        Person:
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
        ExternalIdentification:
          description: Specifies an External Identification associated with the Person.
          type: object
          allOf:
          - $ref: "#/components/schemas/ExternalIdentification"
    PersonDetailsDto:
      required:
      - Surname
      type: object
      properties:
        NamePrefix:
          description: Specifies the terms used to formally address a person.
          maxLength: 20
          pattern: "(^[a-zA-Z]+$)|(^$)"
          type: string
        GivenName:
          description: First name of a person.
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)|(^$)"
          type: string
        MiddleName:
          description: Second name of a person.
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)|(^$)"
          type: string
        Surname:
          description: "Surname is a name added to a given name and is part of a personal\
            \ name. In many cases, a surname is a family name."
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)"
          type: string
        BirthDate:
          description: Date on which a person is born <br/> Format must be ISO Date
            format (YYYY-MM-DD).
          type: string
        Language:
          description: "Language in which a person communicates <br> Valid values\
            \ are : 2 character ISO Language Codes."
          pattern: (^(aa|ab|ae|af|ak|am|an|ar|as|av|ay|az|ba|be|bg|bh|bi|bm|bn|bo|br|bs|ca|ce|ch|co|cr|cs|cu|cv|cy|da|de|dv|dz|ee|el|en|eo|es|et|eu|fa|ff|fi|fj|fo|fr|fy|ga|gd|gl|gn|gu|gv|ha|he|hi|ho|hr|ht|hu|hy|hz|ia|id|ie|ig|ii|ik|in|io|is|it|iu|iw|ja|ji|jv|ka|kg|ki|kj|kk|kl|km|kn|ko|kr|ks|ku|kv|kw|ky|la|lb|lg|li|ln|lo|lt|lu|lv|mg|mh|mi|mk|ml|mn|mo|mr|ms|mt|my|na|nb|nd|ne|ng|nl|nn|no|nr|nv|ny|oc|oj|om|or|os|pa|pi|pl|ps|pt|qu|rm|rn|ro|ru|rw|sa|sc|sd|se|sg|si|sk|sl|sm|sn|so|sq|sr|ss|st|su|sv|sw|ta|te|tg|th|ti|tk|tl|tn|to|tr|ts|tt|tw|ty|ug|uk|ur|uz|ve|vi|vo|wa|wo|xh|yi|yo|za|zh|zu)$)|(^$)
          type: string
        MemorableWord:
          description: Memorable word selected by the customer to be used for customer
            authentication.
          maxLength: 20
          pattern: "(^[a-zA-Z]+$)|(^$)"
          type: string
        MemorableWordReminder:
          description: Reminder set by the person to remember the memorable word.
          maxLength: 35
          type: string
    Phone:
      required:
      - Type
      - Number
      type: object
      properties:
        Type:
          description: "Type of phone <br/> Valid values are : <br/> PHON - Phone\
            \ <br/> MOBL - Mobile <br/> WORK - Work Phone"
          pattern: \S
          type: string
        Number:
          description: "Collection of information that identifies a phone number,\
            \ as defined by telecom services. Phone number must start with special\
            \ character '+', followed by numbers [0 - 9], with minimum length of 8\
            \ digits and maximum length of 15 digits excluding + symbol."
          type: string
        Extension:
          description: "<em> maxLength: 10 </em> <br/> Phone extension number"
          type: string
        ContactPreference:
          description: "Indicates whether the person prefer to be contacted on this\
            \ phone number <br/> Valid values are : <br/> PREF - Preferred for contact\
            \ <br/> NOTP - Not preferred for contact <br/> MAYB - May be used for\
            \ contact"
          type: string
        SmsPreference:
          description: "Indicates whether the person prefer to be receive SMS on this\
            \ mobile number <br/> Valid values are : <br/> PREF - Preferred for contact\
            \ <br/> NOTP - Not preferred for contact <br/> MAYB - May be used for\
            \ contact"
          type: string
    PhoneDtoUpdateRequest:
      required:
      - Type
      type: object
      properties:
        Type:
          description: "Type of phone <br/> Valid values are : <br/> PHON - Phone\
            \ <br/> MOBL - Mobile <br/> WORK - Work Phone"
          pattern: \S
          type: string
        Number:
          description: "Collection of information that identifies a phone number,\
            \ as defined by telecom services. Phone number must start with special\
            \ character '+', followed by numbers [0 - 9], with minimum length of 8\
            \ digits and maximum length of 15 digits excluding + symbol."
          type: string
        Extension:
          description: "<em> maxLength: 10 </em> <br/> Phone extension number"
          type: string
        ContactPreference:
          description: "Indicates whether the person prefer to be contacted on this\
            \ phone number <br/> Valid values are : <br/> PREF - Preferred for contact\
            \ <br/> NOTP - Not preferred for contact <br/> MAYB - May be used for\
            \ contact"
          type: string
        SmsPreference:
          description: "Indicates whether the person prefer to be receive SMS on this\
            \ mobile number <br/> Valid values are : <br/> PREF - Preferred for contact\
            \ <br/> NOTP - Not preferred for contact <br/> MAYB - May be used for\
            \ contact"
          type: string
    PostalAddress:
      required:
      - AddressType
      - PostalCode
      - Country
      - ContactPreference
      type: object
      properties:
        AddressType:
          description: "Type of address<br/> Valid values are : <br/> HOME - Current\
            \ Residential <br/> BIZZ - Business <br/> REGR - Registered Residential"
          pattern: \S
          type: string
        StreetName:
          description: Name of a street or thoroughfare
          maxLength: 70
          type: string
        BuildingNumber:
          description: "Number that identifies the position of a building on a street.\
            \ At least one of Address Line 1, Building Number or Building Name is\
            \ required for a postal address."
          maxLength: 35
          type: string
        BuildingName:
          description: "Name of a building or house. At least one of Address Line\
            \ 1, Building Number or Building Name is required for a postal address."
          maxLength: 70
          type: string
        PostOfficeBox:
          description: "Numbered box in a post office, assigned to a person or organisation,\
            \ where letters are kept until called for"
          maxLength: 16
          type: string
        PostalCode:
          description: Identifier consisting of a group of letters and/or numbers
            that is added to a postal address to assist the sorting of mail
          maxLength: 16
          pattern: \S
          type: string
        AddressLine1:
          description: "Information that locates and identifies a specific address,\
            \ as defined by postal services, that is presented in free format text.\
            \ At least one of Address Line 1, Building Number or Building Name is\
            \ required for a postal address."
          maxLength: 70
          type: string
        AddressLine2:
          description: "AddressLine2 - Information that locates and identifies a specific\
            \ address, as defined by postal services, that is presented in free format\
            \ text"
          maxLength: 70
          type: string
        AddressLine3:
          description: "AddressLine3 - Information that locates and identifies a specific\
            \ address, as defined by postal services, that is presented in free format\
            \ text"
          maxLength: 70
          type: string
        AddressLine4:
          description: "AddressLine4 - Information that locates and identifies a specific\
            \ address, as defined by postal services, that is presented in free format\
            \ text"
          maxLength: 70
          type: string
        TownName:
          description: Name of town / city from the address
          maxLength: 35
          type: string
        CountrySubDivision:
          description: "Identifies a subdivision of a country such as state, region,\
            \ county"
          maxLength: 35
          type: string
        Country:
          description: "Nation with its own government occupying a particular territory\
            \ <br/> Valid values are : 2 character ISO Country Codes "
          pattern: \S
          type: string
        ContactPreference:
          description: "Indicates that this address will be used for all correspondence,\
            \ including card and PIN mailers. Configuration exists on the Card Delivery\
            \ Capability that can be used by the bank to define whether the address\
            \ of the cardholder, or the account holder, should be used for the delivery\
            \ of cards and PINs.<br/> Valid values are : <br/> PREF - Preferred for\
            \ contact <br/> NOTP - Not preferred for contact "
          pattern: \S
          type: string
    ProductFeatureDefaults:
      type: object
      properties:
        DefaultIndicator:
          type: boolean
        RatificationMethod:
          $ref: '#/components/schemas/RatificationMethod'
        RatificationLevel:
          $ref: '#/components/schemas/RatificationLevel'
        Identification:
          type: string
        Capability:
          type: string
    ProductReissueEvent:
      type: object
      properties:
        Product:
          description: Identification of the product
          type: object
          allOf:
          - $ref: '#/components/schemas/RetrieveProductResponse'
    RatificationLevel:
      enum:
      - NONE
      - AGREEMENT
      - AGREEMENT_FACILITY
      type: string
    RatificationMethod:
      enum:
      - NEW_ONLY
      - ALL
      - NONE
      - ALL_EXCLUDING_OVERRIDES
      type: string
    RegisterBundleRequest:
      required:
      - Identification
      - Name
      type: object
      properties:
        Identification:
          description: Identification of a bundle
          maxLength: 37
          minLength: 1
          pattern: ^\S*$
          type: string
        Name:
          description: Name of a bundle
          maxLength: 35
          pattern: \S
          type: string
        Description:
          description: Description of a bundle
          maxLength: 140
          type: string
        Feature:
          type: array
          items:
            $ref: "#/components/schemas/Feature"
    RegisterBundleResponse:
      type: object
      properties:
        Identification:
          description: Identification of a bundle
          type: string
    RegisterConfigurationOptionRequest:
      required:
      - Name
      type: object
      properties:
        Name:
          description: Name of a configuration option
          maxLength: 35
          pattern: \S
          type: string
        Specification:
          description: Description of a configuration option
          maxLength: 140
          type: string
        Value:
          description: Value of a configuration option
          type: string
        ConfigurationParameter:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationParameter"
    RegisterConfigurationOptionResponse:
      type: object
      properties:
        Id:
          format: int64
          type: integer
    RegisterFeatureRequest:
      required:
      - Identification
      - Name
      - Capability
      - ConfigurationOption
      type: object
      properties:
        Identification:
          description: Identification of a feature
          maxLength: 37
          minLength: 1
          pattern: ^\S*$
          type: string
        Name:
          description: Name of a feature
          maxLength: 140
          pattern: \S
          type: string
        Specification:
          description: Description of a feature
          maxLength: 140
          type: string
        FeatureCategory:
          description: Feature category of a feature
          maxLength: 255
          type: string
        Capability:
          description: Name of the system capability linked to a feature
          maxLength: 35
          pattern: \S
          type: string
        ConfigurationOption:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationOption1"
    RegisterFeatureResponse:
      type: object
      properties:
        Identification:
          description: Identification of a feature
          type: string
    RegisterOrganisationRequest:
      required:
      - TradingName
      type: object
      properties:
        Brand:
          description: Identification of the brand associated with the organisation
          maxLength: 37
          type: string
        ExternalIdentification:
          description: Identification of the customer issued by the client financial
            institution (CRM/CIS/CIF)
          maxLength: 35
          type: string
        LegalName:
          description: Official name under which an organisation is registered
          maxLength: 35
          type: string
        TradingName:
          description: "Name used by a business for commercial purposes, although\
            \ its registered legal name, used for contracts and other formal situations,\
            \ may be another"
          maxLength: 35
          pattern: "(^[a-zA-Z0-9](.*[a-zA-Z0-9])?$)|(^[ ]*$)"
          type: string
        RegistrationDate:
          description: Date on which a given organisation was officially registered
            <br/> Format must be ISO Date format (YYYY-MM-DD)
          type: string
        ElectronicAddress:
          description: Address which is accessed by electronic means
          type: array
          items:
            $ref: "#/components/schemas/ElectronicAddress"
        Phone:
          description: Collection of information that identifies a phone address
          type: array
          items:
            $ref: "#/components/schemas/Phone"
    RegisterPersonRequest:
      required:
      - Surname
      - PostalAddress
      type: object
      properties:
        NamePrefix:
          description: Specifies the terms used to formally address a person.
          maxLength: 20
          pattern: "(^[a-zA-Z]+$)|(^$)"
          type: string
        GivenName:
          description: First name of a person.
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)|(^$)"
          type: string
        MiddleName:
          description: Second name of a person.
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)|(^$)"
          type: string
        Surname:
          description: "Surname is a name added to a given name and is part of a personal\
            \ name. In many cases, a surname is a family name."
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)"
          type: string
        BirthDate:
          description: Date on which a person is born <br/> Format must be ISO Date
            format (YYYY-MM-DD).
          type: string
        Language:
          description: "Language in which a person communicates <br> Valid values\
            \ are : 2 character ISO Language Codes."
          pattern: (^(aa|ab|ae|af|ak|am|an|ar|as|av|ay|az|ba|be|bg|bh|bi|bm|bn|bo|br|bs|ca|ce|ch|co|cr|cs|cu|cv|cy|da|de|dv|dz|ee|el|en|eo|es|et|eu|fa|ff|fi|fj|fo|fr|fy|ga|gd|gl|gn|gu|gv|ha|he|hi|ho|hr|ht|hu|hy|hz|ia|id|ie|ig|ii|ik|in|io|is|it|iu|iw|ja|ji|jv|ka|kg|ki|kj|kk|kl|km|kn|ko|kr|ks|ku|kv|kw|ky|la|lb|lg|li|ln|lo|lt|lu|lv|mg|mh|mi|mk|ml|mn|mo|mr|ms|mt|my|na|nb|nd|ne|ng|nl|nn|no|nr|nv|ny|oc|oj|om|or|os|pa|pi|pl|ps|pt|qu|rm|rn|ro|ru|rw|sa|sc|sd|se|sg|si|sk|sl|sm|sn|so|sq|sr|ss|st|su|sv|sw|ta|te|tg|th|ti|tk|tl|tn|to|tr|ts|tt|tw|ty|ug|uk|ur|uz|ve|vi|vo|wa|wo|xh|yi|yo|za|zh|zu)$)|(^$)
          type: string
        MemorableWord:
          description: Memorable word selected by the customer to be used for customer
            authentication.
          maxLength: 20
          pattern: "(^[a-zA-Z]+$)|(^$)"
          type: string
        MemorableWordReminder:
          description: Reminder set by the person to remember the memorable word.
          maxLength: 35
          type: string
        Brand:
          description: Identification of the brand associated with the person.<br/><b>Note:</b>
            Person assigned to a Brand cannot be shared across Brands.
          maxLength: 37
          type: string
        PostalAddress:
          description: Current postal address of the person.
          type: array
          items:
            $ref: "#/components/schemas/PostalAddress"
        Phone:
          description: Collection of information that identifies a phone address.
          type: array
          items:
            $ref: "#/components/schemas/Phone"
        ElectronicAddress:
          description: Address which is accessed by electronic means.
          type: array
          items:
            $ref: "#/components/schemas/ElectronicAddress"
        ExternalIdentification:
          description: Specifies a list of External Identification associated with
            the Person.
          type: array
          items:
            $ref: "#/components/schemas/ExternalIdentification"
    RegisterPersonRequest1:
      required:
      - Surname
      type: object
      properties:
        NamePrefix:
          description: Specifies the terms used to formally address a person.
          maxLength: 20
          pattern: "(^[a-zA-Z]+$)|(^$)"
          type: string
        GivenName:
          description: First name of a person.
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)|(^$)"
          type: string
        MiddleName:
          description: Second name of a person.
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)|(^$)"
          type: string
        Surname:
          description: "Surname is a name added to a given name and is part of a personal\
            \ name. In many cases, a surname is a family name."
          maxLength: 35
          pattern: "(^[a-zA-Z\\s'-]+$)"
          type: string
        BirthDate:
          description: Date on which a person is born <br/> Format must be ISO Date
            format (YYYY-MM-DD).
          type: string
        Language:
          description: "Language in which a person communicates <br> Valid values\
            \ are : 2 character ISO Language Codes."
          pattern: (^(aa|ab|ae|af|ak|am|an|ar|as|av|ay|az|ba|be|bg|bh|bi|bm|bn|bo|br|bs|ca|ce|ch|co|cr|cs|cu|cv|cy|da|de|dv|dz|ee|el|en|eo|es|et|eu|fa|ff|fi|fj|fo|fr|fy|ga|gd|gl|gn|gu|gv|ha|he|hi|ho|hr|ht|hu|hy|hz|ia|id|ie|ig|ii|ik|in|io|is|it|iu|iw|ja|ji|jv|ka|kg|ki|kj|kk|kl|km|kn|ko|kr|ks|ku|kv|kw|ky|la|lb|lg|li|ln|lo|lt|lu|lv|mg|mh|mi|mk|ml|mn|mo|mr|ms|mt|my|na|nb|nd|ne|ng|nl|nn|no|nr|nv|ny|oc|oj|om|or|os|pa|pi|pl|ps|pt|qu|rm|rn|ro|ru|rw|sa|sc|sd|se|sg|si|sk|sl|sm|sn|so|sq|sr|ss|st|su|sv|sw|ta|te|tg|th|ti|tk|tl|tn|to|tr|ts|tt|tw|ty|ug|uk|ur|uz|ve|vi|vo|wa|wo|xh|yi|yo|za|zh|zu)$)|(^$)
          type: string
        MemorableWord:
          description: Memorable word selected by the customer to be used for customer
            authentication.
          maxLength: 20
          pattern: "(^[a-zA-Z]+$)|(^$)"
          type: string
        MemorableWordReminder:
          description: Reminder set by the person to remember the memorable word.
          maxLength: 35
          type: string
        Brand:
          description: Identification of the brand associated with the person.<br/><b>Note:</b>
            Person assigned to a Brand cannot be shared across Brands.
          maxLength: 37
          type: string
        PostalAddress:
          description: Current postal address of the person.
          type: array
          items:
            $ref: "#/components/schemas/PostalAddress"
        Phone:
          description: Collection of information that identifies a phone address.
          type: array
          items:
            $ref: "#/components/schemas/PhoneDtoUpdateRequest"
        ElectronicAddress:
          description: Address which is accessed by electronic means.
          type: array
          items:
            $ref: "#/components/schemas/ElectronicAddressDtoUpdateRequest"
        ExternalIdentification:
          description: Specifies a list of External Identification associated with
            the Person.
          type: array
          items:
            $ref: "#/components/schemas/ExternalIdentificationUpdateDto"
    RegisterPersonResponse:
      type: object
      properties:
        FECID:
          description: Unique identifier for a Person.
          type: string
        Warning:
          $ref: "#/components/schemas/Warning"
    RegisterProductRequest:
      required:
      - Name
      - Brand
      - Identification
      type: object
      properties:
        Name:
          description: Name of a product
          maxLength: 70
          pattern: \S
          type: string
        Brand:
          description: Identification of the brand associated with the product
          maxLength: 37
          minLength: 1
          type: string
        Type:
          description: Specifies the type of product category
          type: string
        Identification:
          description: Unique identifier for the product
          maxLength: 37
          minLength: 1
          type: string
    RegisterProductResponse:
      type: object
      properties:
        Identification:
          type: string
    ReissueCardRequest:
      type: object
      properties:
        ProductId:
          description: ID of the banking product
          type: string
    ReissueCardRequestEvent:
      type: object
      properties:
        PaymentInstrument List:
          description: List of PaymentInstrument
          type: array
          items:
            $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
        Product:
          description: Identification of the product
          type: object
          allOf:
          - $ref: "#/components/schemas/RetrieveProductResponse"
    RequestGetCVV2Request:
      required:
      - RSAPublicKey
      type: object
      properties:
        RSAPublicKey:
          description: Key used for Encrypting the data
          type: string
    RequestViewPinRequest:
      required:
      - RSAPublicKey
      type: object
      properties:
        RSAPublicKey:
          description: Key used for Encrypting the data
          pattern: \S
          type: string
    RetrieveBundleListRequest:
      type: object
      properties:
        Bundle:
          type: array
          items:
            $ref: "#/components/schemas/Bundle"
    RetrieveBundleResponse:
      type: object
      properties:
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the product
          type: string
        Identification:
          description: Identification of a bundle
          type: string
        Name:
          description: Name of the bundle
          type: string
        Description:
          description: Description of a bundle
          type: string
        Status:
          description: Status of a bundle
          type: string
        Feature:
          description: List of linked features
          type: array
          items:
            $ref: "#/components/schemas/Feature1"
    RetrieveCapabilityResponse:
      type: object
      properties:
        CPID:
          description: Capability Catalog ID - Unique identifier for the Capability
            Catalog
          type: string
        Version:
          description: Version of the Capability
          type: string
        CapabilityName:
          description: Name of the Capability
          type: string
        CapabilityDefinition:
          description: Definition of Capability
          type: string
    RetrieveClearPanResponse:
      type: object
      properties:
        PAN:
          description: Long number that appears on the front of the card (Primary
            Account Number) in clear.
          type: string
    RetrieveElectronicAddressResponse:
      required:
      - Type
      - Email
      - ContactPreference
      type: object
      properties:
        Type:
          description: "Type of email <br/> Valid values are : <br/> PERS - Personal\
            \ Email <br/> WORK - Work Email"
          pattern: \S
          type: string
        Email:
          description: "<em> maxLength: 256 </em> <br/> Address for electronic mail\
            \ (e-mail)"
          type: string
        ContactPreference:
          description: "Indicates whether the person prefer to be contacted on this\
            \ email address<br/> Valid values are : <br/> PREF - Preferred for contact\
            \ (at least one email should have this preference) <br/> MAYB - May be\
            \ used for contact (When one email is set as preferred contact, rest of\
            \ the email should have this preference)"
          type: string
        DateTimeAdded:
          description: Time stamp when this email is set as the current electronic
            address
          type: string
    RetrieveFeatureResponse:
      type: object
      properties:
        Id:
          description: Id of the feature
          type: string
        Identification:
          description: Identification of the feature
          type: string
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the product
          type: string
        Name:
          description: Name of a feature
          type: string
        Specification:
          description: Description of a feature
          type: string
        Capability:
          description: Name of the system capability linked to a feature
          type: string
        FeatureCategory:
          description: Name of the feature category assigned to feature
          type: string
        Status:
          description: Status of the feature record in the system
          type: string
        ConfigurationOption:
          description: Configuration Option of the feature record in the system
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationOption1"
        CreateAgreementFeature:
          type: string
        CreateFacility:
          type: string
    RetrieveOrganisationResponse:
      required:
      - TradingName
      type: object
      properties:
        Brand:
          description: Identification of the brand associated with the organisation
          maxLength: 37
          type: string
        ExternalIdentification:
          description: Identification of the customer issued by the client financial
            institution (CRM/CIS/CIF)
          maxLength: 35
          type: string
        LegalName:
          description: Official name under which an organisation is registered
          maxLength: 35
          type: string
        TradingName:
          description: "Name used by a business for commercial purposes, although\
            \ its registered legal name, used for contracts and other formal situations,\
            \ may be another"
          maxLength: 35
          pattern: "(^[a-zA-Z0-9](.*[a-zA-Z0-9])?$)|(^[ ]*$)"
          type: string
        RegistrationDate:
          description: Date on which a given organisation was officially registered
            <br/> Format must be ISO Date format (YYYY-MM-DD)
          type: string
        ElectronicAddress:
          description: Address which is accessed by electronic means
          type: array
          items:
            $ref: "#/components/schemas/ElectronicAddress"
        Phone:
          description: Collection of information that identifies a phone address
          type: array
          items:
            $ref: "#/components/schemas/Phone"
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the organisation
          type: string
        Identification:
          description: Fiserv Enterprise Organisation ID - Unique identifier for the
            organisation
          type: string
        Status:
          description: Status of the organisation record in the system
          type: string
    RetrievePanContactDetailsRequest:
      required:
      - PAN
      type: object
      properties:
        PAN:
          description: Primary Account Number
          type: string
    RetrievePanContactDetailsResponse:
      type: object
      properties:
        Mobile:
          description: Mobile number of the cardholder
          type: string
        DateMobileModified:
          description: "Date and time when mobile number was last updated, This will\
            \ be present only when mobile number is present in response (YYYY-MM-DD\
            \ hh:mm:ss [. fraction ])."
          type: string
        Email:
          description: Email address that is marked as preferred for contact by the
            cardholder
          type: string
        DateEmailModified:
          description: "Date and time when email address was last updated, This will\
            \ be present only when email address is present in response (YYYY-MM-DD\
            \ hh:mm:ss [. fraction ])."
          type: string
    RetrievePaymentInstrumentResponse:
      type: object
      properties:
        FepId:
          description: Unique identifier of the payment instrument (FEPID)
          type: string
          allOf:
          - $ref: "#/components/schemas/UUID"
        Product:
          description: Banking product associated with the payment instrument
          type: string
        RelatedAccount:
          description: Account linked to the payment instrument. (FEAID)
          type: string
        Status:
          description: Status of the payment instrument in the system. Possible Response
            Values are <UL><LI><EM> ENAB (Enabled) </EM></LI> <LI><EM> DISA (Disabled)
            </EM></LI> <LI><EM> DELE (Deleted) </EM></LI></UL>
          type: string
        StartDate:
          description: Date when the payment instrument becomes available for use
            (YYYY-MM-dd).
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
        ExpiryDate:
          description: Date on which the payment instrument expires (YYYY-MM-dd).
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
        PriorCardExpiryDate:
          description: Prior Date on which the payment instrument expires (YYYY-MM-dd).
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
        Cardholder:
          description: Party entitled to use the payment instrument (FECID)
          type: string
        CardholderType:
          description: Indicates if the card holder of the account is a Primary account
            Holder or an Additional Account Holder. Possible Response Values are <UL><LI><EM>
            PRIM (Primary) </EM></LI> <LI><EM> ADNL (Additional) </EM></LI></UL>
          type: string
        NameLine1:
          description: Cardholder name as it appears on the card.
          type: string
        NameLine2:
          description: Details on second name line as it appears on the card.
          type: string
        PinOffset:
          description: Data that system uses to calculate the Personal Identification
            Number for the card.
          type: string
        ActivationStatus:
          description: Indicates whether card activation needs to occur for the most
            recently issued card. Possible Response Values are <UL><LI><EM> ANED (ActivationNeeded)
            </EM></LI> <LI><EM> ACMP (ActivationComplete) </EM></LI></UL>
          type: string
        ActivationDate:
          description: Date when the payment instrument was activated (YYYY-MM-dd).
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
        Blocked:
          description: Indicates whether payment instrument is blocked
          type: string
        BlockedReason:
          description: Specifies the reason for which the payment instrument is blocked.
            Accepted Values are <UL><LI><EM> Lost </EM></LI> <LI><EM> Stolen </EM></LI></UL>
          type: string
        BlockedDateTime:
          description: Date and time at which the payment instrument was blocked (YYYY-MM-DDThh:mm:ss.sssZ).
          type: string
          allOf:
          - $ref: "#/components/schemas/Instant"
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the payment instrument
          type: string
        Brand:
          description: Identification of the brand associated with the payment instrument
          type: string
        PAN:
          description: Long number that appears on the front of the card (Primary
            Account Number) in masked form showing only the last 4 digits
          type: string
        PlasticCreationDateTime:
          description: Date and time at which plastic created for the payment instrument
            (YYYY-MM-DDThh:mm:ss.sssZ).
          type: string
          allOf:
          - $ref: "#/components/schemas/Instant"
        CardTechnology:
          description: Indicates the technology type supported by the physical card.
          type: string
        Design:
          description: Identification of card design associated with the payment card.
          type: string
        LastCardActionProcessed:
          description: The last action processed on the card.
          type: string
        TransferredToPaymentInstrument:
          description: Identification of the new card after lost stolen replacement
          type: string
        InvalidPinTryCounter:
          format: int32
          description: Number of Invalid PIN Tries before reset.
          type: integer
        LastInvalidPinTryDateTime:
          description: Date and time when the Last Invalid PIN was attempted. (YYYY-MM-DDThh:mm:ss.sssZ).
          type: string
          allOf:
          - $ref: '#/components/schemas/Instant'
        DigitalCardType:
          description: Identifies the type of digital card. Possible Response Values
            are <UL><LI><EM> FTRM (FullTerm) </EM></LI> <LI><EM> STRM (ShortTerm)
            </EM></LI> <LI><EM> TRAN (Transient) </EM></LI> <LI><EM> NDIG (NonDigital)
            </EM></LI></UL>
          type: string
        ContactlessOptOutSwitch:
          description: Indicates customer preference for contact versus contactless
            card. This option can only be used if the product supports contactless
            cards. Valid values are Yes and No. The field is set to Yes if a customer
            wishes to opt out of contactless card (i.e. they prefer to have contact
            only card). The field is set to No if a customer wishes to opt in to contactless
            card. The field will not be present in the response if there is no customer
            preference.
          type: string
        IsCancelled:
          description: This field indicates if a card is cancelled or not. Valid values
            are Yes and No. This field will be set to Yes if a card is cancelled.
          type: string
        CancellationDate:
          description: Indicates date/time when a card was cancelled.
          type: string
          allOf:
          - $ref: "#/components/schemas/Instant"
        FraudStatus:
          description: This field indicates if a card is fraudulent or not. Valid
            values are <UL><LI><EM> NONE (None) </EM></LI> <LI><EM> SFRD (SuspectedFraud)
            </EM></LI> <LI><EM> CFRD (ConfirmedFraud) </EM></LI> </UL>
          type: string
        FraudStatusDate:
          description: Indicates date/time when fraud status was last updated.
          type: string
          allOf:
          - $ref: "#/components/schemas/Instant"
        NbrActiveTokens:
          format: int32
          description: Number of active tokens for a card.
          type: integer
        FraudReferStatus:
          description: |-
            This field indicates whether a card is flagged to have all authorisations referred or not referred (anti-referred) to a fraud analyst for potential fraudulent activity. This flag is sent to the Falcon Fraud Manager system during authorisation processing where it can be used in the rules to make informed authorisation decisions.

             Valid values are: <UL><LI><EM> NONE - No referral or anti-referral is assigned </EM></LI> <LI><EM> REFE - All authorizations are referred </EM></LI> <LI><EM> ANTI - No authorizations are referred (anti-refer) </EM></LI> </UL>
          type: string
        FraudReferStatusExpiryDate:
          description: This field indicates the date on which the Fraud Refer Status
            expires.
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
        FraudMonitorStatus:
          description: |-
            The Fraud Monitor Status flag is a two-character alphanumeric field utilized to indicate whether a card is flagged for fraud monitoring. The values assigned to this field must be predefined within CMS module of FirstVision system. This flag is used in segmenting cards and implementing specific fraud minimization strategies within Falcon Fraud Manager system.

            The Fraud Monitor Status flag is sent to the Falcon Fraud Manager system during authorisation processing, allowing the system to leverage the flag in its rules and decision-making processes
          type: string
        FraudMonitorStatusExpiryDate:
          description: This field indicates the date on which the Fraud Monitor Status
            expires.
          type: string
          allOf:
          - $ref: "#/components/schemas/LocalDate"
        Product Type:
          description: Banking Product Type associated with the payment instrument.
          type: string
        Balances:
          description: The list contains detailed information about different types
            of balance associated with the account.
          type: array
          items:
            $ref: '#/components/schemas/Balance'
        enabled:
          type: boolean
    RetrievePaymentInstrumentWithChipDataResponse:
      type: object
      properties:
        PaymentInstrumentResponse:
          description: Payment instrument details
          type: object
          allOf:
          - $ref: "#/components/schemas/RetrievePaymentInstrumentResponse"
        VisaChipDataResponse:
          description: Visa Chip details for a given payment instrument
          type: object
          allOf:
          - $ref: "#/components/schemas/VisaChipDataResponse"
        MasterCardChipDataResponse:
          description: MasterCard Chip details for a given payment instrument
          type: object
          allOf:
          - $ref: "#/components/schemas/MasterCardChipDataResponse"
    RetrievePersonListRequest:
      type: object
      properties:
        FepId:
          description: Unique identifier of the payment instrument (FEPID)
          maxLength: 37
          type: string
        ExternalIdentification:
          description: Specifies an External Identification associated with the Person.
          type: object
          allOf:
          - $ref: "#/components/schemas/ExternalIdentification"
        ClearingSystemIdentificationCode:
          description: Specifies the clearing system identification code. E.g. GBDSC
            (UK Domestic Sort Code). Accepted Values are <UL><LI><EM> GBDSC(UK Domestic
            Sort Code) </EM></LI> <LI><EM> FVACC (FirstVision Account Number) </EM></LI></UL>
          type: string
        AccountIdentification:
          description: Account number associated with External Clearing System
          maxLength: 37
          type: string
        ClearingSystemMemberIdentification:
          description: ' Specifies the clearing system member identification associated
            with the external account.'
          maxLength: 13
          pattern: "(^[a-zA-Z0-9]+|^$)"
          type: string
        BirthDate:
          description: The date of birth of a person. Must be in the ISO Date format
            (YYYY-MM-DD) for an exact match during the search process. Can serve as
            a single search criterion or used alongside any other input search criteria
            to find a matching person.
          type: string
        GivenName:
          description: "The first name of a person. Can serve as a single search criterion\
            \ or used alongside any other request input search criteria to find a\
            \ matching person, regardless of case sensitivity. Supports wildcard searches\
            \ where the persons Given Name begins with the GivenName search criteria\
            \ provided and will return persons that both have an exact or partial\
            \ match."
          type: string
        MiddleName:
          description: "A person's second name(s). Can serve as a single criterion\
            \ or used alongside any other request input criteria to find matching\
            \ details, regardless of case sensitivity. This functionality supports\
            \ wildcard searches where the persons Middle Name begins with the Middle\
            \ Name search criteria provided and will return persons that both have\
            \ an exact or partial match."
          type: string
        Surname:
          description: "The surname or family name of a person can serve as a single\
            \ criterion or be combined with any other request input criteria to find\
            \ matching details, irrespective of case sensitivity. This feature supports\
            \ wildcard search where the persons Surname begins with the Surname search\
            \ criteria entered and will return persons that both have an exact or\
            \ partial match."
          type: string
        PostalCode:
          description: "The active postal address(es) for a person. Can serve as a\
            \ single criterion or used alongside any other request input search criteria\
            \ to find a matching person, regardless of case sensitivity. Returns all\
            \ the persons where one of the active postal address postcodes contain\
            \ a full or partial match to the post code search criteria."
          type: string
        PhoneNumber:
          description: |-
            The Phone identifies all, or part of a phone number can serve as a single criterion or used alongside any other request input search criteria. The system will search through all customers Phone, Mobile or Work Numbers that contain the number entered in the search and returns all the customers where it finds a match. E.g., Phone/Mobile/Work Number search: '7950'
            Returns customers for phone/mobile/work numbers:
            +447950292122
            +667950765432
            +330777079501
          type: string
        PageStartIndex:
          description: "The page start index is an optional field which specifies\
            \ the starting index for the page of results. It is an integer that represents\
            \ the index of the page. The first page corresponds to the PageStartIndex\
            \ value of 0. If PageStartIndex is provided in the request, PageLimit\
            \ must also be provided."
          pattern: "^-?(0|[1-9][0-9]*)$"
          type: string
        PageLimit:
          description: "The page limit is an optional parameter which specifies the\
            \ maximum number of records to return in the page of results. It is an\
            \ integer that represents the total number of records on a single page.\
            \ The PageLimit must have a minimum value of 1, indicating at least one\
            \ record per page. If PageLimit is provided in the request, PageStartIndex\
            \ must also be provided."
          pattern: "^-?(0|[1-9][0-9]*)$"
          type: string
    RetrievePersonResponse:
      type: object
      properties:
        FECID:
          description: Fiserv Enterprise Customer ID - Unique identifier for the person
          maxLength: 37
          type: string
        Status:
          description: "Status of the person record in the system <br> Valid values\
            \ are : <br> ENAB - Enabled <br> DISA - Disabled <br> DELE - Deleted <br>\
            \ PROF - ProForma"
          type: string
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the person
          maxLength: 37
          type: string
        Brand:
          description: Identification of the brand associated with the person
          maxLength: 37
          type: string
        FiName:
          description: Name of the financial institution associated with the person
          maxLength: 70
          type: string
        BrandName:
          description: Name of the brand associated with the person
          maxLength: 70
          type: string
        ExternalIdentification:
          description: Specifies a list of External Identification associated with
            the Person.
          type: array
          items:
            $ref: "#/components/schemas/ExternalIdentification"
        NamePrefix:
          description: "Specifies the terms used to formally address a person <br>\
            \ Valid values are : <br> Doctor<br> Mister <br> Miss <br> Madam <br>\
            \ GenderNeutral"
          type: string
        GivenName:
          description: First name of a person
          maxLength: 35
          type: string
        MiddleName:
          description: Second name of a person
          maxLength: 35
          type: string
        Surname:
          description: "Surname is a name added to a given name and is part of a personal\
            \ name. In many cases, a surname is a family name"
          maxLength: 35
          type: string
        BirthDate:
          description: Date on which a person is born <br/> Format must be ISO Date
            format (YYYY-MM-DD)
          type: string
        Language:
          description: "Language in which a person communicates <br> Valid values\
            \ are : 2 character ISO Language Codes"
          type: string
        MemorableWord:
          description: Memorable word selected by the customer to be used for customer
            authentication
          maxLength: 20
          type: string
        MemorableWordReminder:
          description: Reminder set by the person to remember the memorable word
          maxLength: 35
          type: string
        PostalAddress:
          description: "Current active postal addresses of the person.<br/> <b>Note:\
            \ historic or inactive addresses will not be returned in this API.<b/><br/> "
          type: array
          items:
            $ref: "#/components/schemas/RetrievePostalAddressResponse"
        Phone:
          description: Collection of information that identifies a phone address.
          type: array
          items:
            $ref: "#/components/schemas/RetrievePhoneResponse"
        ElectronicAddress:
          description: Address which is accessed by electronic means.
          type: array
          items:
            $ref: "#/components/schemas/RetrieveElectronicAddressResponse"
        enabled:
          type: boolean
    RetrievePhoneResponse:
      required:
      - Type
      - Number
      type: object
      properties:
        Type:
          description: "Type of phone <br/> Valid values are : <br/> PHON - Phone\
            \ <br/> MOBL - Mobile <br/> WORK - Work Phone"
          pattern: \S
          type: string
        Number:
          description: "Collection of information that identifies a phone number,\
            \ as defined by telecom services. Phone number must start with special\
            \ character '+', followed by numbers [0 - 9], with minimum length of 8\
            \ digits and maximum length of 15 digits excluding + symbol."
          type: string
        Extension:
          description: "<em> maxLength: 10 </em> <br/> Phone extension number"
          type: string
        ContactPreference:
          description: "Indicates whether the person prefer to be contacted on this\
            \ phone number <br/> Valid values are : <br/> PREF - Preferred for contact\
            \ <br/> NOTP - Not preferred for contact <br/> MAYB - May be used for\
            \ contact"
          type: string
        SmsPreference:
          description: "Indicates whether the person prefer to be receive SMS on this\
            \ mobile number <br/> Valid values are : <br/> PREF - Preferred for contact\
            \ <br/> NOTP - Not preferred for contact <br/> MAYB - May be used for\
            \ contact"
          type: string
        DateTimeAdded:
          description: Time stamp when this phone number is set as the current phone
            address
          type: string
    RetrievePostalAddressResponse:
      required:
      - AddressType
      - PostalCode
      - Country
      - ContactPreference
      type: object
      properties:
        AddressType:
          description: "Type of address<br/> Valid values are : <br/> HOME - Current\
            \ Residential <br/> BIZZ - Business <br/> REGR - Registered Residential"
          pattern: \S
          type: string
        StreetName:
          description: Name of a street or thoroughfare
          maxLength: 70
          type: string
        BuildingNumber:
          description: "Number that identifies the position of a building on a street.\
            \ At least one of Address Line 1, Building Number or Building Name is\
            \ required for a postal address."
          maxLength: 35
          type: string
        BuildingName:
          description: "Name of a building or house. At least one of Address Line\
            \ 1, Building Number or Building Name is required for a postal address."
          maxLength: 70
          type: string
        PostOfficeBox:
          description: "Numbered box in a post office, assigned to a person or organisation,\
            \ where letters are kept until called for"
          maxLength: 16
          type: string
        PostalCode:
          description: Identifier consisting of a group of letters and/or numbers
            that is added to a postal address to assist the sorting of mail
          maxLength: 16
          pattern: \S
          type: string
        AddressLine1:
          description: "Information that locates and identifies a specific address,\
            \ as defined by postal services, that is presented in free format text.\
            \ At least one of Address Line 1, Building Number or Building Name is\
            \ required for a postal address."
          maxLength: 70
          type: string
        AddressLine2:
          description: "AddressLine2 - Information that locates and identifies a specific\
            \ address, as defined by postal services, that is presented in free format\
            \ text"
          maxLength: 70
          type: string
        AddressLine3:
          description: "AddressLine3 - Information that locates and identifies a specific\
            \ address, as defined by postal services, that is presented in free format\
            \ text"
          maxLength: 70
          type: string
        AddressLine4:
          description: "AddressLine4 - Information that locates and identifies a specific\
            \ address, as defined by postal services, that is presented in free format\
            \ text"
          maxLength: 70
          type: string
        TownName:
          description: Name of town / city from the address
          maxLength: 35
          type: string
        CountrySubDivision:
          description: "Identifies a subdivision of a country such as state, region,\
            \ county"
          maxLength: 35
          type: string
        Country:
          description: "Nation with its own government occupying a particular territory\
            \ <br/> Valid values are : 2 character ISO Country Codes "
          pattern: \S
          type: string
        ContactPreference:
          description: "Indicates that this address will be used for all correspondence,\
            \ including card and PIN mailers. Configuration exists on the Card Delivery\
            \ Capability that can be used by the bank to define whether the address\
            \ of the cardholder, or the account holder, should be used for the delivery\
            \ of cards and PINs.<br/> Valid values are : <br/> PREF - Preferred for\
            \ contact <br/> NOTP - Not preferred for contact "
          pattern: \S
          type: string
        DateTimeAdded:
          description: Time stamp when this address is set as the current address
          type: string
        isActive:
          description: Identifies the latest active address of a specific type added
            to the system. Valid values are True and False. If it is set to True it
            means that this is the last address of that address type that was added
            into the system and that is still active.
          type: string
    RetrieveProductFeatureListRequest:
      type: object
      properties:
        CapabilityName:
          maxLength: 35
          type: string
        CreateAgreementFeature:
          type: string
        CreateFacility:
          type: string
    RetrieveProductFeatureResponse:
      type: object
      properties:
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the product
          type: string
        Brand:
          description: Identification of the brand associated with the product
          type: string
        Product:
          description: Identification of the product
          type: string
        Type:
          description: Type of the product
          type: string
        Feature:
          description: List of linked features
          type: array
          items:
            $ref: "#/components/schemas/Feature2"
    RetrieveProductResponse:
      type: object
      properties:
        Identification:
          type: string
        ExternalIdentification:
          type: string
        Name:
          type: string
        FinancialInstitution:
          type: string
        Brand:
          type: string
        BrandName:
          type: string
        Type:
          type: string
        Status:
          type: string
    SystemUpdateRequest:
      type: object
      properties:
        ChipData:
          description: It's an object with chip sequence number and application transaction
            counter value
          type: object
          allOf:
          - $ref: "#/components/schemas/ChipData"
        InvalidPinTryCounter:
          description: Number of times an authorisation with an invalid PIN was attempted
            on the card.
          pattern: ^\d*$
          type: string
        Cardholder:
          description: "Party entitled to use the card (FECID).<br/><b>Note:</b> Person\
            \ assigned to a Brand, can only be used when adding cards under the same\
            \ Brand."
          type: string
        NbrActiveTokens:
          format: int32
          description: Number of active tokens for a card.
          type: integer
    SystemUpdateResponse:
      type: object
      properties:
        InvalidPinTryCounter:
          format: int32
          description: Number of times an authorisation with an invalid PIN was attempted
            on the card.
          type: integer
        LastInvalidPinTryDateTime:
          description: Date and time when the last authorisation with an invalid PIN
            was attempted on the card.
          type: string
          allOf:
          - $ref: "#/components/schemas/Instant"
        ChipData:
          description: It's an object with chip sequence number and application transaction
            counter value
          type: object
          allOf:
          - $ref: "#/components/schemas/ChipData"
        Cardholder:
          description: "Party entitled to use the card (FECID).<br/><b>Note:</b> Person\
            \ assigned to a Brand, can only be used when adding cards under the same\
            \ Brand."
          type: string
        NbrActiveTokens:
          format: int32
          description: Number of active tokens for a card.
          type: integer
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    UpdateAssociationKeyResponse:
      type: object
      properties:
        Association:
          description: Identifies the association Key
          type: string
        Product:
          description: Operating region associated with the payment card
          type: string
        Brand:
          description: Identification of the brand associated with the payment card
          type: string
        Key:
          description: Key
          type: string
        Description:
          description: Description
          type: string
        KeyStatus:
          description: KeyStatus
          type: string
    UpdateBundleRequest:
      type: object
      properties:
        Name:
          description: Name of a bundle
          maxLength: 35
          pattern: \A(?!\s*$).+
          type: string
        Description:
          description: Description of a bundle
          maxLength: 140
          pattern: \A(?!\s*$).+|^$
          type: string
    UpdateFraudStatusRequest:
      type: object
      properties:
        FraudStatus:
          description: "This field identifies the specific type of fraud status assigned\
                \ to a card. <p>Valid Values:</p><UL><LI><EM> NONE-Indicates that no fraud\
                \ status has been assigned to the card. </EM></LI> <LI><EM> SFRD-Denotes\
                \ that the card has been flagged as suspected fraud, necessitating further\
                \ investigation and verification to confirm any fraudulent activity. </EM></LI>\
                \ <LI><EM> CFRD-Indicates that the card has been verified and confirmed\
                \ as involved in fraudulent activities. </EM></LI> </UL>Note: Suspected\
                \ Fraud (SFRD) status cannot override Confirmed Fraud (CFRD) status. Confirmed\
                \ Fraud status cannot be removed from the card once set. When Confirmed\
                \ Fraud status is applied, the system will automatically set Block Reason\
                \ on the card to Stolen."
          type: string
        FraudReferStatus:
          description: "This field indicates whether a card is flagged to have all\
                \ authorisations referred or not referred (anti-referred) to a fraud analyst\
                \ for potential fraudulent activity. This flag is sent to the Falcon Fraud\
                \ Manager system during authorisation processing where it can be used\
                \ in the rules to make informed authorisation decisions.<p>Valid Values:</p><UL><LI><EM>\
                \ NONE-No referral or anti-referral is assigned.</EM></LI> <LI><EM> REFE-All\
                \ authorizations are referred. </EM></LI> <LI><EM> ANTI-No authorizations\
                \ are referred(anti-refer). </EM></LI> </UL>"
          type: string
        FraudReferStatusExpiryDate:
          description: "This field indicates the date on which the Fraud Refer Status\
                \ expires.This field is required and must be set to a present or future\
                \ date when Fraud Refer Status is set to REFE or ANTI. \nThe value in\
                \ this field will automatically be removed when Fraud Refer Status is\
                \ updated to NONE."
          type: string
        FraudMonitorStatus:
          description: "The Fraud Monitor Status flag is a two-character alphanumeric\
                \ field utilized to indicate whether a card is flagged for fraud monitoring.\
                \ This flag is used in order to implement specific fraud minimization\
                \ strategies within Falcon Fraud Manager system.The Fraud Monitor Status\
                \ flag is sent to Falcon Fraud Manager system during authorisation processing,\
                \ allowing the system to leverage the flag in its rules and decision-making\
                \ processes."
          pattern: "(([a-zA-Z0-9]{2})?)"
          type: string
        FraudMonitorStatusExpiryDate:
          description: |-
            This field indicates the date on which the Fraud Monitor Status expires.This field is required and must be set to a present or future date when Fraud Monitor Status is set to any valid value other than null.
            The value in this field will automatically be removed when Fraud Monitor Status is removed from a card.
          type: string
    UpdateFraudStatusResponse:
      type: object
      properties:
        FraudStatus:
          description: "This field identifies the specific type of fraud status assigned\
              \ to a card. Possible responses:<UL><LI><EM> NONE-Indicates that no fraud\
              \ status has been assigned to the card. </EM></LI> <LI><EM> SFRD-Denotes\
              \ that the card has been flagged as suspected fraud, necessitating further\
              \ investigation and verification to confirm any fraudulent activity. </EM></LI>\
              \ <LI><EM> CFRD-Indicates that the card has been verified and confirmed\
              \ as involved in fraudulent activities. </EM></LI> </UL>"
          type: string
        FraudReferStatus:
          description: "<p>This field indicates whether a card is flagged to have\
              \ all authorisations referred or not referred (anti-referred) to a fraud\
              \ analyst for potential fraudulent activity. This flag is sent to the\
              \ Falcon Fraud Manager system during authorisation processing where it\
              \ can be used in the rules to make informed authorisation decisions.</p>Possible\
              \ responses:<UL><LI><EM> NONE-No referral or anti-referral is assigned.</EM></LI>\
              \ <LI><EM> REFE-All authorizations are referred. </EM></LI> <LI><EM> ANTI-No\
              \ authorizations are referred (anti-refer). </EM></LI> </UL>"
          type: string
        FraudReferStatusExpiryDate:
          description: This field indicates the date on which the Fraud Refer Status
            expires.
          type: string
        FraudMonitorStatus:
          description: "The Fraud Monitor Status flag is a two-character alphanumeric\
              \ field utilized to indicate whether a card is flagged for fraud monitoring.This\
              \ flag is used in order to implement specific fraud minimization strategies\
              \ within Falcon Fraud Manager system.<br/>The Fraud Monitor Status flag\
              \ is sent to Falcon Fraud Manager system during authorisation processing,\
              \ allowing the system to leverage the flag in its rules and decision-making\
              \ processes."
          type: string
        FraudMonitorStatusExpiryDate:
          description: This field indicates the date on which the Fraud Monitor Status
            expires.The value in this field will automatically be removed when Fraud
            Monitor Status is removed from a card.
          type: string
    UpdateInstrumentKeyRequest:
      required:
        - KeyIndex
      type: object
      properties:
        Brand:
          description: Identification of the brand associated with the payment card
          maxLength: 37
          type: string
        Product:
          description: Banking product associated with the payment card
          maxLength: 37
          type: string
        KeyIndex:
          description: Identifies the Index of keys
          type: integer
        Key:
          description: "This key can be populated with PVK, CVK or ACK based on the\
              \ key type"
          type: string
        Description:
          description: Description of key
          maxLength: 140
          type: string
        DecimalizationTable:
          description: Decimalization Table
          maxLength: 32
          minLength: 32
          pattern: "^[0-9A-Fa-f]+$"
          type: string
        KeyStatus:
          description: status of the key
          type: string
    UpdateInstrumentKeyResponse:
      type: object
      properties:
        Brand:
          description: Identification of the brand associated with the payment card
          type: string
        Product:
          description: Banking product associated with the payment card
          type: string
        KeyIndex:
          description: Identifies the Index of keys
          type: integer
        Key:
          description: "This key can be populated with PVK, CVK or ACK based on the\
              \ key type"
          type: string
        DecimalizationTable:
          description: Decimalization Table
          type: string
        Description:
          description: Description of key
          type: string
        KeyStatus:
          description: status of the key
          type: string
    UpdateNetworkAccountOptionRequest:
      required:
        - NetworkAccountUpdaterOption
      type: object
      properties:
        NetworkAccountUpdaterOption:
          description: Identifies whether the cardholder is requesting opt-out or
            opt-in for the Network Account Updater. The valid values are OptOut or
            OptIn.
          minLength: 1
          pattern: (^$|OptOut|OptIn)
          type: string
    UpdateNetworkAccountOptionResponse:
      type: object
      properties:
        NetworkAccountUpdaterOption:
          description: Identifies whether the cardholder has requested opt-out or
            opt-in for the Network Account Updater. This contains the value set in
            the request.
          type: string
    UpdateBundleResponse:
      type: object
      properties:
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the product
          type: string
        Identification:
          description: Identification of a bundle
          type: string
        Name:
          description: Name of the bundle
          type: string
        Description:
          description: Description of a bundle
          type: string
        Status:
          description: Status of a bundle
          type: string
        Feature:
          description: List of linked features
          type: array
          items:
            $ref: "#/components/schemas/Feature1"
    UpdateFeatureRequest:
      required:
      - Name
      type: object
      properties:
        Name:
          description: Name of a feature
          maxLength: 140
          pattern: \S
          type: string
        Specification:
          description: Description of a feature
          maxLength: 140
          type: string
        ConfigurationOption:
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationOption1"
    UpdateFeatureResponse:
      type: object
      properties:
        Id:
          description: Id of the feature
          type: string
        Identification:
          description: Identification of the feature
          type: string
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the product
          type: string
        Name:
          description: Name of a feature
          type: string
        Specification:
          description: Description of a feature
          type: string
        Capability:
          description: Name of the system capability linked to a feature
          type: string
        FeatureCategory:
          description: Name of the feature category assigned to feature
          type: string
        Status:
          description: Status of the feature record in the system
          type: string
        ConfigurationOption:
          description: Configuration Option of the feature record in the system
          type: array
          items:
            $ref: "#/components/schemas/ConfigurationOption1"
    UpdatePersonResponse:
      type: object
      properties:
        FECID:
          description: Fiserv Enterprise Customer ID - Unique identifier for the person
          maxLength: 37
          type: string
        Status:
          description: "Status of the person record in the system <br> Valid values\
            \ are : <br> ENAB - Enabled <br> DISA - Disabled <br> DELE - Deleted <br>\
            \ PROF - ProForma"
          type: string
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the person
          maxLength: 37
          type: string
        Brand:
          description: Identification of the brand associated with the person
          maxLength: 37
          type: string
        FiName:
          description: Name of the financial institution associated with the person
          maxLength: 70
          type: string
        BrandName:
          description: Name of the brand associated with the person
          maxLength: 70
          type: string
        ExternalIdentification:
          description: Specifies a list of External Identification associated with
            the Person.
          type: array
          items:
            $ref: "#/components/schemas/ExternalIdentification"
        NamePrefix:
          description: "Specifies the terms used to formally address a person <br>\
            \ Valid values are : <br> Doctor<br> Mister <br> Miss <br> Madam <br>\
            \ GenderNeutral"
          type: string
        GivenName:
          description: First name of a person
          maxLength: 35
          type: string
        MiddleName:
          description: Second name of a person
          maxLength: 35
          type: string
        Surname:
          description: "Surname is a name added to a given name and is part of a personal\
            \ name. In many cases, a surname is a family name"
          maxLength: 35
          type: string
        BirthDate:
          description: Date on which a person is born <br/> Format must be ISO Date
            format (YYYY-MM-DD)
          type: string
        Language:
          description: "Language in which a person communicates <br> Valid values\
            \ are : 2 character ISO Language Codes"
          type: string
        MemorableWord:
          description: Memorable word selected by the customer to be used for customer
            authentication
          maxLength: 20
          type: string
        MemorableWordReminder:
          description: Reminder set by the person to remember the memorable word
          maxLength: 35
          type: string
        PostalAddress:
          description: "Current active postal addresses of the person.<br/> <b>Note:\
            \ historic or inactive addresses will not be returned in this API.<b/><br/> "
          type: array
          items:
            $ref: "#/components/schemas/RetrievePostalAddressResponse"
        Phone:
          description: Collection of information that identifies a phone address.
          type: array
          items:
            $ref: "#/components/schemas/RetrievePhoneResponse"
        ElectronicAddress:
          description: Address which is accessed by electronic means.
          type: array
          items:
            $ref: "#/components/schemas/RetrieveElectronicAddressResponse"
        enabled:
          type: boolean
        Warning:
          $ref: "#/components/schemas/Warning"
    UpdateProductRequest:
      type: object
      properties:
        Name:
          description: Name of a product
          maxLength: 70
          pattern: \A(?!\s*$).+
          type: string
        Type:
          description: Specifies the type of product category
          type: string
    UpdateProductResponse:
      type: object
      properties:
        Identification:
          type: string
        ExternalIdentification:
          type: string
        Name:
          type: string
        FinancialInstitution:
          type: string
        Brand:
          type: string
        BrandName:
          type: string
        Type:
          type: string
        Status:
          type: string
    VisaChipDataResponse:
      type: object
      properties:
        PaymentInstrument:
          type: string
        ChipSequence:
          type: string
        ChipStatus:
          type: string
        CreationDate:
          type: string
        ExpiryDate:
          type: string
        Product:
          type: string
        PinTryLimit:
          type: string
        OfflinePin:
          type: string
        MagneticStripeImageSecurityCode:
          type: string
        LanguagePreference:
          type: string
        Version:
          type: string
        CryptogramKeyIndex:
          type: string
        CryptogramVersion:
          type: string
        MacKeyIndex:
          type: string
        EncryptionKeyIndex:
          type: string
        Lcol:
          type: string
        Ucol:
          type: string
        StagedScript:
          type: string
        SentScript:
          type: string
        CurrencyConversionFactor:
          type: string
        SecondaryAppCurrencyCode:
          type: string
        CotCurrency:
          type: string
        CotCountry:
          type: string
        Tac:
          type: string
        Tadc:
          type: string
        Atc:
          format: int32
          type: integer
        ContactlessLcol:
          type: string
        ContactlessUcol:
          type: string
        VlpResetThreshold:
          type: string
        VlpFundsLimit:
          type: string
        VlpTransactionAmountLimit:
          type: string
        PreferredCvm:
          type: string
        enabled:
          type: boolean
    Warning:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/WarningMessage"
    Warning1:
      type: object
      properties:
        responseCode:
          format: int32
          type: integer
        message:
          type: array
          items:
            $ref: "#/components/schemas/WarningMessage1"
    WarningMessage:
      type: object
      properties:
        message:
          type: string
    WarningMessage1:
      type: object
      properties:
        message:
          type: string
