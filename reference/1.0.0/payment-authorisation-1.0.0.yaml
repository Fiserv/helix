---
openapi: 3.0.3
info:
  title: payment-authorisation
  version: 1.1.0-354
tags:
- name: Helix Core
paths:
  /PaymentAuthorisation/V1/AuthAssessment/Getlist/Request:
    post:
      tags:
      - Helix Core
      summary: This API is used to retrieve a list of authorisations processed against
        a card. Only enabled authorisations will be returned.
      description: This API is used to retrieve a list of authorisations processed
        against a card. Only enabled authorisations will be returned.
      operationId: getAuthAssessmentLogsForFepId
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrieveAuthAssessmentRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  AuthAssessmentId:
                    format: int64
                    description: Payment auth assessment ID
                    type: integer
                  FinancialInstitution:
                    description: Identification of the financial institution associated
                      with the payment instrument
                    type: string
                  PaymentInstrument:
                    description: Unique identifier of the payment instrument (FEPID)
                    type: string
                  AgreementId:
                    description: Unique identifier of the Agreement (FEAID) associated
                      with the Payment instrument
                    type: string
                  PrimaryAccountNumber:
                    description: The PAN number which is used to facilitate the transaction.
                    type: string
                  ReversalStatus:
                    description: Status of the PaymentAuthAssessment record in the
                      system
                    type: string
                  AssessmentCreationDateTime:
                    description: The date and time when the AuthAssessment record
                      was created and persisted.
                    type: string
                    allOf:
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
                  AuthorisationRequestData:
                    description: Contains the dump of the request data as received
                      from Switch for Payment Auth decision.
                    type: string
                  AuthorisationResult:
                    description: Authorisation decision as supplied by the PaymentAuth
                      service
                    type: string
                  RsltReasonCode:
                    description: The reason code provides the exact reason as to why
                      a specific validation check was failed
                    type: string
                  RsltReasonDesc:
                    description: The reason description provides the details of the
                      exact reason as to why a specific validation check was failed
                    type: string
                  ValidationResultDataList:
                    description: "Provides list of various validation checks that\
                      \ had been attempted on the transaction along with the corresponding\
                      \ outcome (approved, declined , bypassed) and the ResultReasonCode\
                      \ ."
                    type: string
                  SentScript:
                    description: Issuer script that has already been sent to the card
                      in response to the authorisation request.
                    type: string
                    example: PIN UNBLOCK
                  AuthorisationTimeLimit:
                    description: This field applies to pre-authorisation requests
                      and completion advices. The Authorisation time limit notifies
                      the issuer that the merchant or acquirer intends to follow a
                      pre-authorisation request with a completion advice within a
                      certain number of days or hours.
                    type: integer
                  AuthorisationRetentionDateTime:
                    description: "This field indicates the specific date and time\
                      \ until which the authorisation will be held, regardless of\
                      \ whether it is matched, unmatched, or partially matched. Once\
                      \ this retention date & time expires, the authorisation will\
                      \ be automatically deleted, and any funds held for unmatched\
                      \ or partially matched transactions will be released from the\
                      \ position components pending balance back onto the agreements\
                      \ available credit."
                    type: string
                    allOf:
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
                    - $ref: '#/components/schemas/LocalDateTime'
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHBR001\
            \ : FEPID required, please provide value.</em></li><li><em>HLXAUTHBR001\
            \ : FEPID less than minimum 36 length allowed.</em></li><li><em>HLXAUTHBR001\
            \ : FEPID exceeds maximum 37 length allowed.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHPA02\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Retrieve a list of authorisations for a card
      x-group-name: Authorisation
  /PaymentAuthorisation/V1/AuthAssessment/{AuthAssessmentId}/Retrieve:
    get:
      tags:
      - Helix Core
      summary: This API is used to retrieve a specific authorisations details. Only
        enabled authorisations will be returned.
      description: This API is used to retrieve a specific authorisations details.
        Only enabled authorisations will be returned.
      operationId: getPaymentAuthAssessmentLog
      parameters:
      - name: AuthAssessmentId
        in: path
        description: Unique identifier of an authorisation
        required: true
        schema:
          pattern: "(^[1-9]\\d*$)"
          type: string
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveAuthAssessmentResponse'
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHBR001\
            \ : AuthAssessmentId must be numeric and greater than zero.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHAA001\
            \ : PaymentAuthAssessment log not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Inquire an authorisation
      x-group-name: Authorisation
  /PaymentAuthorisation/V1/AuthReasonCodes/Register:
    post:
      tags:
      - Helix Core
      summary: This method is used to add new entries of ResultReasonCode.
      description: This API allows the user to add new entries of ResultReasonCode.
      operationId: register
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthReasonCodesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthReasonCodesResponse'
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHBR001\
            \ : Financial Institution required, please provide value.</em></li><li><em>HLXAUTHBR001\
            \ : Financial Institution is not valid, please provide valid value.</em></li><li><em>HLXAUTHBR001\
            \ : Financial Institution exceeds maximum 37 length allowed.</em></li><li><em>HLXAUTHBR001\
            \ : Brand required, please provide value.</em></li><li><em>HLXAUTHBR001\
            \ : Brand is not valid, please provide valid value.</em></li><li><em>HLXAUTHBR001\
            \ : Brand exceeds maximum 37 length allowed.</em></li><li><em>HLXAUTHBR001\
            \ : RsltReasonCode required, please provide value.</em></li><li><em>HLXAUTHBR001\
            \ : Duplicate Result Reason Codes are present in the request.</em></li><li><em>HLXAUTHBR001\
            \ : Switch Reason Code for Result Reason Code %s required, please provide\
            \ value.</em></li><li><em>HLXAUTHBR001 : Validation name for Result Reason\
            \ Code %s required, please provide value.</em></li><li><em>HLXAUTHBR001\
            \ : Result Reason Description for Result Reason Code %s required, please\
            \ provide value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHAR03\
            \ : Duplicate Result Reason Code %s, Already present in the system.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHAR01\
            \ : There is an error while registering payment authorisation reason codes,\
            \ please try again.</em></li><li><em>HLXAUTHAR02 : There is an error while\
            \ retrieving payment authorisation reason codes, please try again.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Register ResultReasonCode
      x-group-name: AuthReasonCodes
      x-api-scope: Internal
  /PaymentAuthorisation/V1/AuthReasonCodes/Retrieve:
    get:
      tags:
      - Helix Core
      summary: This method is used to return the list of authorisation reason codes
        for a given ValidationName.
      description: This API allows the user to retrieve list of authorisation reason
        codes for a given ValidationName.
      operationId: retrieve
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      - name: ValidationName
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthReasonCodesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHAR01\
            \ : There is an error while registering payment authorisation reason codes,\
            \ please try again.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Retrieve ResultReasonCode with ValidationName
      x-group-name: AuthReasonCodes
      x-api-scope: Internal
  /PaymentAuthorisation/V1/AuthReasonCodes/Update:
    patch:
      tags:
      - Helix Core
      summary: This method is used to update payment authorisation result reason code
        details.
      description: This API allows the user to update payment authorisation result
        reason code details.
      operationId: update
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthReasonCodesRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthReasonCodesResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHAR04\
            \ : Result Reason Code %s not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: "Internal Server Error <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHAR05\
            \ : There is an error while updating payment authorisation reason code\
            \ details, please try again.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Update ResultReasonCode details
      x-group-name: AuthReasonCodes
      x-api-scope: Internal
  /PaymentAuthorisation/V1/Authorisation/Evaluate:
    post:
      tags:
      - Helix Core
      summary: This method is used to authorise the payment card transaction
      description: This API allows the user to authorise the payment card transaction
      operationId: evaluateAuthorisation
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorisationRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Body:
                    description: Body
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Authorise Request
      x-group-name: Authorisation
      x-api-scope: Internal
  /PaymentAuthorisation/V1/CardManagement/ChangePINAtTerminal/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to change PIN.
      description: This API allows the user to change existing PIN via ATM.
      operationId: execute
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorisationRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorisationResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Change PIN
      x-group-name: Authorisation
      x-api-scope: External
  /PaymentAuthorisation/V1/CardManagement/PINUnblock/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to validate and reset the PIN try counter.
      description: This API allows the user to reset the PIN try counter via ATM.
      operationId: executePinUnblock
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorisationRequest'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  Body:
                    description: Body
                    type: object
                    allOf:
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
                    - $ref: '#/components/schemas/ResponseBody'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: PIN Unblock
      x-group-name: Authorisation
      x-api-scope: External
  /PaymentAuthorisation/V1/CardManagement/{paymentInstrumentId}/ChangePIN/Execute:
    post:
      tags:
      - Helix Core
      summary: This method is used to Change PIN for the given FEPID
      description: This method is used to Change PIN for the given FEPID
      operationId: changePin
      parameters:
      - name: fi-id
        in: header
        description: Financial Institution Identification
        required: true
        schema:
          maxLength: 37
          type: string
      - name: brand-id
        in: header
        description: Brand Identification
        schema:
          maxLength: 37
          type: string
      - name: paymentInstrumentId
        in: path
        description: Unique identifier of the payment instrument (FEPID)
        required: true
        schema:
          maxLength: 37
          pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteChangePINRequest'
      responses:
        "200":
          description: OK
        "400":
          description: "Bad Request <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHBR001\
            \ : Card not found.</em></li><li><em>HLXAUTHBR001 : Current PIN block\
            \ required, please provide value.</em></li><li><em>HLXAUTHBR001 : Required\
            \ PIN block required, please provide value.</em></li><li><em>HLXAUTHBR001\
            \ : KeyAssociation required, please provide value.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "401":
          description: Not Authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "404":
          description: "Not Found <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHBU01\
            \ : Card not found.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "413":
          description: Payload Too large
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "422":
          description: "Unprocessable Entity <br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHBV01\
            \ : Card is not enabled.</em></li><li><em>HLXAUTHBV02 : Card already blocked\
            \ as Lost.</em></li><li><em>HLXAUTHBV02 : Card already blocked as Stolen.</em></li><li><em>HLXAUTHAC01\
            \ : Account is closed.</em></li><li><em>HLXAUTHID01 : Card is cancelled.</em></li><li><em>HLXAUTHPC15\
            \ : CHANGE_PIN is not allowed for confirmed fraud cards.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "429":
          description: Too Many Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "500":
          description: "Internal Server Error<br/><br/> <b>Error codes list:</b><br/><ul><li><em>HLXAUTHPC16\
            \ : Attempt to change PIN has failed.</em></li></ul>"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "502":
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
        "504":
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HelixErrorDetails'
      x-proxy-name: Change PIN
      x-group-name: Card Sensitive Data
components:
  schemas:
    Acquirer:
      type: object
      properties:
        Identification:
          description: Identification of the acquirer
          type: string
        Country:
          description: 3 byte numeric country code of the acquirer
          type: string
    AdditionalAmount:
      type: object
      properties:
        Type:
          description: "This indicates whether the amount returned is the balance\
            \ relating to a Balance Inquiry, or the original authorisation amount\
            \ for Partial Authorisation responses. Valid values are: <UL><LI> AMTQ\
            \ (Balance Inquiry) </LI><LI> ORIG (Original Authorisation Amount for\
            \ Partial Authorisations) </LI></UL>"
          type: string
        OtherType:
          description: "Indicates the type of balance provided for Balance Inquiry\
            \ Responses. Valid values are: <UL><LI> Available Balance (Available Credit\
            \ on the account) </LI></UL>"
          type: string
        ResponseAmount:
          description: Response Amount
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount2'
    AdditionalCardData:
      type: object
      properties:
        Type:
          description: Type of additional card data
          type: string
        Value:
          description: Value of additional card data
          type: string
    AdditionalResultInformation:
      type: object
      properties:
        Type:
          description: Type of additional result information
          type: string
        Value:
          description: Value of additional result information
          type: string
    Amount:
      type: object
      properties:
        value:
          type: number
        currency:
          type: string
    Amount1:
      type: object
      properties:
        Value:
          description: Represents the monetary value associated.
          default: 0
          type: number
        Currency:
          description: "Represents the currency associated, expressed in ISO 4217\
            \ currency code."
          type: string
    Amount2:
      type: object
      properties:
        Amount:
          description: Represents the associated amount.
          type: number
        Currency:
          description: "Represents the associated amount currency, expressed as an\
            \ ISO 4217 currency code."
          type: string
        Sign:
          description: "Indicates whether the amount is a debit or credit. Valid values\
            \ are: <UL><LI> DBIT (Debit) </LI> <LI> CRDT (Credit) </LI></UL>"
          type: string
    AuthReasonCodesRequest:
      type: object
      properties:
        AuthReasonCodes:
          type: array
          items:
            $ref: '#/components/schemas/AuthReasonCodesRequestDto'
    AuthReasonCodesRequestDto:
      type: object
      properties:
        RsltReasonCode:
          description: Result reason code for authorisation
          type: string
        RsltReasonDesc:
          description: Result reason code description
          type: string
        SwitchReasonCode:
          description: Switch specific reason code
          type: string
        ValidationName:
          description: Validation name
          type: string
    AuthReasonCodesResponse:
      type: object
      properties:
        AuthReasonCodes:
          type: array
          items:
            $ref: '#/components/schemas/AuthReasonCodesRequestDto'
    AuthorisationAdviceReversalEvent:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        FEAID:
          type: string
        FEPID:
          type: string
        ProductId:
          type: string
        AuthorisationRequest:
          $ref: '#/components/schemas/AuthorisationRequest'
    AuthorisationRequest:
      type: object
      properties:
        Header:
          description: Header
          type: object
          allOf:
          - $ref: '#/components/schemas/Header'
        Body:
          description: Body
          type: object
          allOf:
          - $ref: '#/components/schemas/Body'
    AuthorisationResponse:
      type: object
      properties:
        Body:
          description: Body
          type: object
          allOf:
          - $ref: '#/components/schemas/ResponseBody'
    Balance:
      type: object
      properties:
        BalanceType:
          description: "This refers to the category for which various types of balances\
            \ are retrieved. If the balance type is TOTAL, all position types will\
            \ be considered during balance calculation. If the balance type is CASH,\
            \ then only the position type CASH will be considered during balance calculation.\
            \ Possible values are: <ul> <li>TOTAL </li> <li> CASH. </li> </ul>"
          type: string
          allOf:
          - $ref: '#/components/schemas/BalanceType'
        CurrentBalance:
          description: This field represents the total outstanding balance for an
            account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount1'
        PendingBalance:
          description: This field represents the pending (uncleared) balance for an
            account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount1'
        AvailableBalance:
          description: This field represents the available to spend balance for an
            account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount1'
        Limit:
          description: This field represents the maximum limit for a given balance
            type associated with an account.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount1'
    BalanceType:
      enum:
      - TOTAL
      - CASH
      type: string
    BatchJobRequest:
      type: object
      properties:
        JobName:
          description: Specifies the name of the job to be executed.
          type: string
        RunDate:
          description: Represents the date when the job is scheduled to run.
          type: string
    Body:
      type: object
      properties:
        Environment:
          description: Contains the information pertaining to various entities interacting
            with the transaction
          type: object
          allOf:
          - $ref: '#/components/schemas/Environment'
        Context:
          description: Describes conditions and characteristics of the transaction
          type: object
          allOf:
          - $ref: '#/components/schemas/Context'
        Transaction:
          description: Card transaction for which an authorisation is requested
          type: object
          allOf:
          - $ref: '#/components/schemas/Transaction'
        ICCRelatedData:
          description: ICC Related Data
          type: object
          allOf:
          - $ref: '#/components/schemas/ICCRelatedData'
    Card:
      type: object
      properties:
        PAN:
          description: Primary Account Number
          type: string
        CardSequenceNumber:
          description: Card Chip Sequence number
          type: string
        ExpiryDate:
          description: "Expiry Date for the card, Valid format is YYMM"
          type: string
    Card1:
      type: object
      properties:
        AdditionalCardData:
          description: Additional Card Data
          type: array
          items:
            $ref: '#/components/schemas/AdditionalCardData'
    CardholderBillingAmount:
      type: object
      properties:
        Amount:
          description: Amount of the transaction expressed in the currency of the
            terminal or as a reversed amount of a previous authorisation
          type: number
        Currency:
          description: Currency code associated with the transaction amount. ISO 4217
            Codes for the representation of currencies and funds
          type: string
    CardholderBillingAmount1:
      type: object
      properties:
        amt:
          type: number
        ccy:
          type: string
    ChipData:
      type: object
      properties:
        ChipSequence:
          type: string
        ApplicationTxnCntr:
          format: int32
          type: integer
        PinTryLimit:
          type: string
        OfflinePin:
          type: string
        Version:
          type: string
        CryptogramKeyIndex:
          type: string
        CryptogramVersion:
          type: string
        MacKeyIndex:
          type: string
        EncryptionKeyIndex:
          type: string
    ComputeLimitRequest:
      required:
      - UniqueIdType
      - UniqueId
      - Brand
      - Product
      - FEAID
      - TCV
      - TxnAmt
      type: object
      properties:
        UniqueIdType:
          description: "Type of Unique ID e.g. FEPID, FEAID or FECID"
          type: string
        UniqueId:
          description: Unique identifier of the Restriction Level e.g. payment instrument
            (FEPID)
          type: string
        Brand:
          description: Brand to which the Agreement belongs
          type: string
        Product:
          description: Banking product associated with the payment card
          type: string
        FEAID:
          description: Identification of the agreeement
          type: string
        TCV:
          description: Transaction Criteria Value representing the bit value for different
            criteria of a transaction.
          type: string
        TxnAmt:
          description: Actual amount of the transaction.
          type: string
        TxnDate:
          description: "Original Transaction Date. For authorisation requests, this\
            \ date contains the transaction date. For reversal requests, this date\
            \ contains the date of the original authorisation for which reversal request\
            \ is received. When no value is passed, then the value is considered as\
            \ today's date during processing. <br/> Format must be ISO Date format\
            \ (YYYY-MM-DD)."
          type: string
    Context:
      type: object
      properties:
        PointOfServiceContext:
          description: Contains point of interaction information specific to a given
            transaction
          type: object
          allOf:
          - $ref: '#/components/schemas/PointOfServiceContext'
        TransactionContext:
          description: Describes the details of the card payment transaction
          type: object
          allOf:
          - $ref: '#/components/schemas/TransactionContext'
        Verification:
          description: "Verification details for the verifications performed on CVV,\
            \ CVV2, iCVV and ARQC if provided in the input"
          type: array
          items:
            $ref: '#/components/schemas/Verification'
    Environment:
      type: object
      properties:
        Acquirer:
          description: Acquirer
          type: object
          allOf:
          - $ref: '#/components/schemas/Acquirer'
        Originator:
          description: Originator
          type: object
          allOf:
          - $ref: '#/components/schemas/Originator'
        Terminal:
          description: "Identifies the terminal, from where the transaction is triggered"
          type: object
          allOf:
          - $ref: '#/components/schemas/Terminal'
        Card:
          description: Card
          type: object
          allOf:
          - $ref: '#/components/schemas/Card'
        Token:
          description: Token
          type: object
          allOf:
          - $ref: '#/components/schemas/Token'
    Environment1:
      type: object
      properties:
        Card:
          description: Card details
          type: object
          allOf:
          - $ref: '#/components/schemas/Card1'
    EvaluateRestrictionRequest:
      required:
      - UniqueIdType
      - UniqueId
      - Brand
      - Product
      - TCV
      type: object
      properties:
        UniqueIdType:
          description: "Type of Unique ID e.g. FEPID, FEAID or FECID"
          minLength: 1
          type: string
        UniqueId:
          description: Unique identifier of the Restriction Level e.g. payment instrument
            (FEPID)
          maxLength: 37
          minLength: 1
          type: string
        Brand:
          description: Brand to which the Agreement belongs
          maxLength: 37
          type: string
        Product:
          description: Banking product associated with the payment card
          maxLength: 37
          type: string
        FEAID:
          description: Agreement id associated with the payment card
          maxLength: 37
          type: string
        TCV:
          description: Transaction Criteria Value representing the bit value for different
            criteria of a transaction.
          minLength: 1
          type: string
    EvaluateRestrictionResponse:
      type: object
      properties:
        UniqueIDType:
          description: "Type of Unique ID e.g. FEPID, FEAID or FECID"
          type: string
        UniqueID:
          description: Unique identifier of the Restriction Level e.g. payment instrument
            (FEPID)
          type: string
        Rslt:
          description: Result for the authorisation
          type: string
        RsltReasonCode:
          description: Result reason code for authorisation
          type: string
        RsltReasonDesc:
          description: Result reason code description
          type: string
    EvaluateSpendLimitsRequest:
      required:
      - UniqueIDType
      - UniqueID
      - Brand
      - Product
      - TCV
      - TxnAmt
      type: object
      properties:
        UniqueIDType:
          description: "Type of Unique ID e.g. FEPID, FEAID or FECID"
          type: string
        UniqueID:
          description: Unique identifier of the Restriction Level e.g. payment instrument
            (FEPID)
          maxLength: 37
          pattern: \S
          type: string
        Brand:
          description: Brand to which the Agreement belongs
          maxLength: 37
          pattern: \S
          type: string
        Product:
          description: Banking product associated with the payment card
          maxLength: 37
          pattern: \S
          type: string
        FEAID:
          description: Agreement id associated with the payment card
          maxLength: 37
          type: string
        TCV:
          description: Transaction Criteria Value representing the bit value for different
            criteria of a transaction.
          pattern: \S
          type: string
        TxnAmt:
          description: Transaction Amount
          type: number
    EvaluateSpendLimitsResponse:
      type: object
      properties:
        UniqueIDType:
          description: "Type of Unique ID e.g. FEPID, FEAID or FECID"
          type: string
        UniqueID:
          description: Unique identifier of the Restriction Level e.g. payment instrument
            (FEPID)
          type: string
        Rslt:
          description: Result for the authorisation
          type: string
        RsltReasonCode:
          description: Result reason code for authorisation
          type: string
        RsltReasonDesc:
          description: Result reason code description
          type: string
        LCV:
          description: Limit Criteria Value representing the bit value for different
            criteria of a transaction.
          type: string
    ExecuteChangePINRequest:
      required:
      - CurrentPINBlock
      - RequiredPINBlock
      - KeyAssociation
      type: object
      properties:
        CurrentPINBlock:
          description: "Current PIN block is composed of the old PIN details, which\
            \ customer want to change."
          type: string
        RequiredPINBlock:
          description: "Required PIN block is composed of the new PIN details, which\
            \ customer provides as input to change the existing PIN."
          type: string
        KeyAssociation:
          description: Used to identify PIN block encryption keys.
          type: string
    Header:
      type: object
      properties:
        MessageFunction:
          description: Indicate if this is a normal request (REQU) or an Advice (ADVC)
          type: string
        MessageTypeId:
          description: Indicate if the message is for an authorisation transaction
            (AUTH) or a reversal transaction (RVSL)
          type: string
        SwitchTransactionId:
          description: Unique identifier assigned by the switch to the authorisation
            txn
          type: string
        OriginalSwitchTxnId:
          description: OriginalSwitchTransactionId
          type: string
        ReversalSource:
          description: ReversalSource
          type: string
        Association:
          description: Association
          type: string
    HelixErrorDetails:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/HelixMessage'
    HelixMessage:
      type: object
      properties:
        errorCode:
          type: string
        type:
          type: string
        title:
          type: string
        detail:
          type: string
        instance:
          type: string
    ICCRelatedData:
      type: object
      properties:
        AuthorisationRequestCryptogram:
          description: Application Cryptogram
          type: string
        AuthorisationAmount:
          description: Authorisation Amount
          type: string
        OtherAmount:
          description: Other Amount
          type: string
        TerminalCountryCode:
          description: Terminal Country Code
          type: string
        TerminalVerificationResults:
          description: Terminal Verification Results
          type: string
        TransactionCurrencyCode:
          description: Transaction Currency Code
          type: string
        TransactionDate:
          description: Transaction Date
          type: string
        TransactionType:
          description: Transaction Type
          type: string
        UnpredictableNumber:
          description: Unpredictable Number
          type: string
        ApplicationInterchangeProfile:
          description: Application Interchange Profile
          type: string
        IssuerApplicationData:
          description: Issuer Application Data
          type: string
        AuthorisationResponseCode:
          description: Authorization Response Code.
          type: string
        ApplicationTransactionCounter:
          description: Application transaction counter
          type: string
        IssuerAuthenticationData:
          description: Issuer Authentication Data
          type: string
        arqcAndAtcNotNull:
          type: boolean
    ICCRelatedData1:
      type: object
      properties:
        AuthorisationResponseCryptogram:
          description: Authorisation Response Cryptogram
          type: string
        IssuerScript:
          type: string
    ICCRelatedData2:
      type: object
      properties:
        AuthorisationRequestCryptogram:
          description: Application Cryptogram
          type: string
        AuthorisationAmount:
          description: Authorisation Amount
          type: string
        OtherAmount:
          description: Other Amount
          type: string
        TerminalCountryCode:
          description: Terminal Country Code
          type: string
        TerminalVerificationResults:
          description: Terminal Verification Results
          type: string
        TransactionCurrencyCode:
          description: Transaction Currency Code
          type: string
        TransactionDate:
          description: Transaction Date
          type: string
        TransactionType:
          description: Transaction Type
          type: string
        UnpredictableNumber:
          description: Unpredictable Number
          type: string
        ApplicationInterchangeProfile:
          description: Application Interchange Profile
          type: string
        IssuerApplicationData:
          description: Issuer Application Data
          type: string
        AuthorisationResponseCode:
          description: Authorization Response Code.
          type: string
        ApplicationTransactionCounter:
          description: Application transaction counter
          type: string
        arqcAndAtcNotNull:
          type: boolean
        ApplicationTxnCntr:
          description: Application transaction counter
          type: string
        IssuerAuthenticationData:
          description: Issuer Authentication Data
          type: string
    LifeCycleTraceIdentificationData:
      type: object
      properties:
        Identification:
          description: A unique identification assigned for each original authorization
            request by the payment scheme. This identifier can be used to match authorisation
            records with corresponding clearing records.
          type: string
    LimitInput:
      required:
      - LimitType
      - PeriodType
      - CustomerMaximumLimitAmount
      type: object
      properties:
        LimitType:
          description: Indicates what type of transaction.<br/>Example:<br/>ATM<br/>POS<br/>Ecomm<br/>Contactless<br/>Totalspend<br/>International<br/>
          type: string
        PeriodType:
          description: "Indicates how long the limit will be valid for. Valid values\
            \ are: <ul><li>Single (only Issuer limit)</li><br/><li>Daily</li><br/><li>Monthly</li><br/><li>Flexi</li></ul>"
          type: string
        CustomerMaximumLimitAmount:
          description: "Indicates spend limit, which is set by the customer."
          type: string
        FromDateTime:
          description: "Indicates the date and time that this limit takes effect.\
            \ If the value is in the past or not supplied, then this will be set to\
            \ today's date and the system time when the request was received."
          type: string
        ToDateTime:
          description: Indicates the date and time that this limit will end. It can
            be updated for only Limit Type FLEX. For other limits it is automatically
            calculated to end at 23:59:59. The value must be greater than the FromDateTime.
          type: string
        Status:
          description: "Indicates whether flexi limit is active or not. <br/>Values\
            \ are, <br/>ENAB<br/>DELE"
          type: string
    LimitOutput:
      type: object
      properties:
        LimitType:
          description: Indicates what type of transaction.<br/>Example:<br/>ATM<br/>POS<br/>Ecomm<br/>Contactless<br/>Totalspend<br/>International<br/>
          type: string
        PeriodType:
          description: "Indicates how long the limit will be valid for. Valid values\
            \ are: <ul><li>Single (only Issuer limit)</li><br/><li>Daily</li><br/><li>Monthly</li><br/><li>Flexi</li></ul>"
          type: string
        CustomerMaximumLimitAmount:
          description: "Indicates spend limit, which is set by the customer."
          type: string
        FeatureMaximumLimitAmount:
          description: "Indicates spend limit, which is set by the issuer."
          type: string
        CumulativeAmount:
          description: Which stores value for accumulated transaction amount.
          type: string
        FromDateTime:
          description: "Indicates the date and time that this limit takes effect.\
            \ If the value is in the past or not supplied, then this will be set to\
            \ today's date and the system time when the request was received."
          type: string
        ToDateTime:
          description: Indicates the date and time that this limit will end. It can
            be updated for only Limit Type FLEX. For other limits it is automatically
            calculated to end at 23:59:59. The value must be greater than the FromDateTime.
          type: string
        Status:
          description: "Indicates whether flexi limit is active or not. <br/>Values\
            \ are, <br/>ENAB<br/>DELE"
          type: string
    LimitResponseDto:
      type: object
      properties:
        LimitType:
          description: Indicates what type of transaction.<br/>Example:<br/>ATM<br/>POS<br/>Ecomm<br/>Contactless<br/>Totalspend<br/>International<br/>
          type: string
        PeriodType:
          description: "Indicates how long the limit will be valid for. Valid values\
            \ are: <ul><li>Single (only Issuer limit)</li><br/><li>Daily</li><br/><li>Monthly</li><br/><li>Flexi</li></ul>"
          type: string
        CustomerMaximumLimitAmount:
          description: "Indicates spend limit, which is set by the customer."
          type: string
        FeatureMaximumLimitAmount:
          description: "Indicates spend limit, which is set by the issuer."
          type: string
        LimitCumulativeAmount:
          description: Which stores value for accumulated transaction amount.
          type: string
        FromDateTime:
          description: "Indicates the date and time that this limit takes effect.\
            \ If the value is in the past or not supplied, then this will be set to\
            \ today's date and the system time when the request was received."
          type: string
        ToDateTime:
          description: Indicates the date and time that this limit will end. It can
            be updated for only Limit Type FLEX. For other limits it is automatically
            calculated to end at 23:59:59. The value must be greater than the FromDateTime.
          type: string
    LocalDate:
      format: date
      type: string
      example: 2022-03-10
    LocalDateTime:
      format: date-time
      type: string
      example: 2022-03-10T12:15:50
    NewPINData:
      type: object
      properties:
        PINBlockFormat:
          description: PIN Block Format
          type: string
        EncryptedPINBlock:
          description: Encrypted new pin block
          type: string
    OriginalTransactionAmounts:
      type: object
      properties:
        AmountQualifier:
          description: Transaction Amount Qualifier
          type: string
        CardholderBillingAmount:
          description: Cardholder Billing Amount
          type: string
    Originator:
      type: object
      properties:
        Identification:
          description: Identification of the originator
          type: string
        Country:
          description: 3 byte numeric country code of the originator
          type: string
    PINData:
      type: object
      properties:
        NcrptdPINBlck:
          description: Encrypted pin block
          type: string
    PaymentAuthAssessmentEvent:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        Product:
          description: Product to which the Position Entry belongs.
          type: string
        AgreementID:
          description: Agreement ID to which this Position Entry belongs.
          type: string
        PaymentInstrumentID:
          description: Payment Instrument ID used to perform the transaction.
          type: string
        PartyID:
          description: Associated Party ID to which this Position Entry Belongs.
          type: string
        Amount:
          description: Transaction Amount.
          type: object
          allOf:
          - $ref: '#/components/schemas/Amount1'
        EffectiveDateTime:
          description: Date when Transaction was performed.
          type: string
        AuthorisationReferenceID:
          description: Reference ID captured in Authorisation Domain during Authorisation
            Process. Mandatory for all pending transactions (transactions approved
            but not settled).
          type: string
        NetworkReferenceID:
          description: Network Reference ID - Network Reference ID sent by Scheme
            during authorisation and clearing.
          type: string
        CardClearingReferenceID:
          description: CardClearing ID - Reference ID captured in Card Clearing Domain
            during Card Clearing process.
          type: string
        TransactionTypeCode:
          description: Specifies the type or nature of the payment.
          type: string
        MerchantID:
          description: AcceptorID.
          type: string
        MerchantName:
          description: Acceptor Name.
          type: string
        MerchantLocation:
          description: Address of the merchant location.
          type: string
        MerchantCountry:
          description: Acceptor Country.
          type: string
        MerchantCategoryCode:
          description: Merchant Category Code.
          type: string
        TerminalID:
          description: Terminal ID.
          type: string
        TerminalTypeCode:
          description: Terminal Type Code.
          type: string
        TerminalCapabilityCode:
          description: Terminal Card Data Input.
          type: string
        ApprovalCode:
          description: Auth Approval Code.
          type: string
        CardPresentIndicator:
          description: "Point of Service Context, Card Present."
          type: string
        CardholderPresentIndicator:
          description: "Point of Service Context, Cardholder Present."
          type: string
        EcommerceIndicator:
          description: Ecommerce Indicator.
          type: string
        MotoInd:
          description: Mail or Telephone Order.
          type: string
        CardDataInput:
          description: Terminal Card Data Input.
          type: string
        TransactionInitiatorType:
          description: Transaction Initiator Type.
          type: string
        TransactionCode:
          description: Transaction Code associated with the transaction.
          type: string
        PAN:
          description: Primary Account Number linked to transaction.
          type: string
        RetentionDateTime:
          description: Retention Date Time.
          type: string
    PaymentAuthAssessmentEvent1:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        FEPID:
          description: Fiserv Enterprise Payment Identification
          type: string
        FEAID:
          description: Fiserv Enterprise Account Identification
          type: string
        ReversalStatus:
          description: Indicates reversal status.
          type: string
        AssessmentCreationDateTime:
          description: Indicates assessment creation datetime.
          type: string
        AuthorisationRslt:
          description: Indicates authorisation result.
          type: string
        RsltReasonCode:
          description: Indicates result reason code.
          type: string
        RsltReasonDesc:
          description: Indicates result reason description.
          type: string
        MessageTypeId:
          description: Indicates result reason description.
          type: string
    PaymentInstrumentRelatedData:
      type: object
      properties:
        FepId:
          description: Unique identifier of the payment instrument (FEPID).
          type: string
          allOf:
          - $ref: '#/components/schemas/UUID'
        Product:
          description: Banking product associated with the payment instrument.
          type: string
        Product Type:
          description: Banking Product Type associated with the payment instrument.
          type: string
        RelatedAccount:
          description: Account linked to the payment instrument (FEAID).
          type: string
        Cardholder:
          description: Party entitled to use the payment instrument (FECID).
          type: string
        CardholderType:
          description: Party type entitled to use the payment instrument (FECID).
          type: string
        ChipSequence:
          description: Chip sequence of the chip related to the payment instrument.
          type: string
        ActivationStatus:
          description: Indicates whether card activation needs to occur for the most
            recently issued card. Possible Response Values are <UL><LI><EM> ANED (ActivationNeeded)
            </EM></LI> <LI><EM> ACMP (ActivationComplete) </EM></LI></UL>
          type: string
        Brand:
          description: Identification of the brand associated with the payment instrument.
          type: string
        CardTechnology:
          description: Indicates the technology type supported by the physical card.
          type: string
        DigitalCardType:
          description: Identifies the type of digital card. Possible Response Values
            are <UL><LI><EM> FTRM (FullTerm) </EM></LI> <LI><EM> STRM (ShortTerm)
            </EM></LI> <LI><EM> TRAN (Transient) </EM></LI> <LI><EM> NDIG (NonDigital)
            </EM></LI></UL>
          type: string
        OfflinePin:
          description: Offline PIN related to the payment instrument.
          type: string
        FraudStatus:
          description: This field indicates if a card is fraudulent or not. Valid
            values are <UL><LI><EM> NONE (None) </EM></LI> <LI><EM> SFRD (SuspectedFraud)
            </EM></LI> <LI><EM> CFRD (ConfirmedFraud) </EM></LI> </UL>
          type: string
        FraudStatusDate:
          description: Indicates date/time when fraud status was last updated.
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDate'
        FraudReferStatus:
          description: |-
            This field indicates whether a card is flagged to have all authorisations referred or not referred (anti-referred) to a fraud analyst for potential fraudulent activity. This flag is sent to the Falcon Fraud Manager system during authorisation processing where it can be used in the rules to make informed authorisation decisions.

             Valid values are: <UL><LI><EM> NONE - No referral or anti-referral is assigned </EM></LI> <LI><EM> REFE - All authorizations are referred </EM></LI> <LI><EM> ANTI - No authorizations are referred (anti-refer) </EM></LI> </UL>
          type: string
        FraudReferStatusExpiryDate:
          description: This field indicates the date on which the Fraud Refer Status
            expires.
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDate'
        FraudMonitorStatus:
          description: |-
            The Fraud Monitor Status flag is a two-character alphanumeric field utilized to indicate whether a card is flagged for fraud monitoring. The values assigned to this field must be predefined within CMS module of FirstVision system. This flag is used in segmenting cards and implementing specific fraud minimization strategies within Falcon Fraud Manager system.

            The Fraud Monitor Status flag is sent to the Falcon Fraud Manager system during authorisation processing, allowing the system to leverage the flag in its rules and decision-making processes.
          type: string
        FraudMonitorStatusExpiryDate:
          description: This field indicates the date on which the Fraud Monitor Status
            expires.
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDate'
        Balances:
          description: The list contains detailed information about different types
            of balance associated with the account.
          type: array
          items:
            $ref: '#/components/schemas/Balance'
    PointOfServiceContext:
      type: object
      properties:
        CardPresent:
          description: Indicates whether the transaction has been initiated by a card
            physically present or not
          type: boolean
        CardholderPresent:
          description: Indicates whether the transaction has been initiated in presence
            of the cardholder or not
          type: boolean
        ECommerceIndicator:
          description: Indicates whether transaction is ecommerce transaction or not
          type: boolean
        MOTOCode:
          description: Code which identifies whether transaction is mail order or
            Telephone order
          type: string
        DelayedAuthorisationIndicator:
          description: Delayed Authorisation Indicator
          type: string
        CardDataEntryMode:
          description: "Code which identifies transaction entry mode, whether transaction\
            \ is contactless or magnetic stripe, etc"
          type: string
        PartialApprovalSupported:
          description: "This field identifies whether an acquirer supports partial\
            \ authorisations, where the issuer responds with an approved authorisation\
            \ for a lesser amount when the account does not have the funds available\
            \ to be able to approve the full authorisation amount. Valid values are:\
            \ <UL><LI> true (Indicates that the merchant to supports a partial amount\
            \ approval) </LI><LI> false or not present (Indicates that the merchant\
            \ does not support partial amount approval) </LI></UL>"
          type: boolean
    ProcessingResult:
      type: object
      properties:
        ResultData:
          description: Result data
          type: object
          allOf:
          - $ref: '#/components/schemas/ResultData'
        ApprovalCode:
          description: System generated unique code assigned to an authorisation request
            that has been approved.
          type: string
    ResponseBody:
      type: object
      properties:
        Environment:
          description: Environment
          type: object
          allOf:
          - $ref: '#/components/schemas/Environment1'
        Context:
          description: Describes conditions and characteristics of the transaction
          type: object
          allOf:
          - $ref: '#/components/schemas/Context'
        ProcessingResult:
          description: Processing result
          type: object
          allOf:
          - $ref: '#/components/schemas/ProcessingResult'
        IccRelatedData:
          description: ICC Related Data
          type: object
          allOf:
          - $ref: '#/components/schemas/ICCRelatedData1'
        Transaction:
          description: Contains the original requested amounts in the case of a partial
            authorisation response
          type: object
          allOf:
          - $ref: '#/components/schemas/ResponseTransaction'
        PaymentInstrumentRelatedData:
          description: Payment Instrument Related Data
          type: object
          allOf:
          - $ref: '#/components/schemas/PaymentInstrumentRelatedData'
    ResponseTransaction:
      type: object
      properties:
        AdditionalAmounts:
          description: This field group is used for either Partial Authorisation Responses
            to return the original requested amount and also for Balance Inquiry responses
            to return the available credit balance.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalAmount'
    ResultData:
      type: object
      properties:
        Result:
          description: Result
          type: string
        AdditionalResultInformation:
          description: Additional result information
          type: array
          items:
            $ref: '#/components/schemas/AdditionalResultInformation'
    RetrieveAuthAssessmentRequest:
      required:
      - FEPID
      type: object
      properties:
        FEPID:
          description: Unique identifier of the payment instrument (FEPID)
          pattern: \S
          type: string
    RetrieveAuthAssessmentResponse:
      type: object
      properties:
        AuthAssessmentId:
          format: int64
          description: Payment auth assessment ID
          type: integer
        FinancialInstitution:
          description: Identification of the financial institution associated with
            the payment instrument
          type: string
        PaymentInstrument:
          description: Unique identifier of the payment instrument (FEPID)
          type: string
        AgreementId:
          description: Unique identifier of the Agreement (FEAID) associated with
            the Payment instrument
          type: string
        PrimaryAccountNumber:
          description: The PAN number which is used to facilitate the transaction.
          type: string
        ReversalStatus:
          description: Status of the PaymentAuthAssessment record in the system
          type: string
        AssessmentCreationDateTime:
          description: The date and time when the AuthAssessment record was created
            and persisted.
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
        AuthorisationRequestData:
          description: Contains the dump of the request data as received from Switch
            for Payment Auth decision.
          type: string
        AuthorisationResult:
          description: Authorisation decision as supplied by the PaymentAuth service
          type: string
        RsltReasonCode:
          description: The reason code provides the exact reason as to why a specific
            validation check was failed
          type: string
        RsltReasonDesc:
          description: The reason description provides the details of the exact reason
            as to why a specific validation check was failed
          type: string
        ValidationResultDataList:
          description: "Provides list of various validation checks that had been attempted\
            \ on the transaction along with the corresponding outcome (approved, declined\
            \ , bypassed) and the ResultReasonCode ."
          type: string
        SentScript:
          description: Issuer script that has already been sent to the card in response
            to the authorisation request.
          type: string
          example: PIN UNBLOCK
        AuthorisationTimeLimit:
          description: This field applies to pre-authorisation requests and completion
            advices. The Authorisation time limit notifies the issuer that the merchant
            or acquirer intends to follow a pre-authorisation request with a completion
            advice within a certain number of days or hours.
          type: integer
        AuthorisationRetentionDateTime:
          description: "This field indicates the specific date and time until which\
            \ the authorisation will be held, regardless of whether it is matched,\
            \ unmatched, or partially matched. Once this retention date & time expires,\
            \ the authorisation will be automatically deleted, and any funds held\
            \ for unmatched or partially matched transactions will be released from\
            \ the position components pending balance back onto the agreements available\
            \ credit."
          type: string
          allOf:
          - $ref: '#/components/schemas/LocalDateTime'
    RetrieveAuthRestrictionResponse:
      type: object
      properties:
        FreezeAll:
          description: "Field used to freeze all transactions by cardholder for a\
            \ given Payment Instrument <br> Yes: Freeze all transactions <br> No:\
            \ Unfreeze all transactions"
          type: string
        IsATMAllowed:
          description: "Field used to restrict all ATM transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: ATM transactions are allowed\
            \ <br> No: ATM transactions not allowed"
          type: string
        IsCNPAllowed:
          description: "Field used to restrict all Card Not Present transactions by\
            \ cardholder for a given Payment Instrument <br> Yes: CNP transactions\
            \ are allowed <br> No: CNP transactions not allowed"
          type: string
        IsPOSAllowed:
          description: "Field used to restrict all POS transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: POS transactions are allowed\
            \ <br> No: POS transactions not allowed"
          type: string
        IsContactLessAllowed:
          description: "Field used to restrict all Contactless transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: Contactless transactions are\
            \ allowed <br> No: Contactless transactions not allowed"
          type: string
        IsInternationalAllowed:
          description: "Field used to freeze all International transactions by cardholder\
            \ for a given Payment Instrument <br> Yes:  International transactions\
            \ are allowed <br> No: International transactions not allowed"
          type: string
    RetrieveLimitResponse:
      type: object
      properties:
        UniqueIdType:
          description: "Type of Unique ID<br/>FEPID: Payment Instrument ID<br/>FEAID:\
            \ Account ID<br/>FECID: Customer ID"
          type: string
        UniqueId:
          description: "Unique identifier to retrieve update limit details. \nExample:\
            \ payment instrument (FEPID)"
          type: string
        Limits:
          description: List of Limits
          type: array
          items:
            $ref: '#/components/schemas/LimitResponseDto'
    SettlementService:
      type: object
      properties:
        SettlementServiceDates:
          description: Dates related to the settlement service for the transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/SettlementServiceDates'
    SettlementServiceDates:
      type: object
      properties:
        SettlementDate:
          description: Date of settlement for a given authorisation request. The date
            format is MMDD.
          type: string
    Terminal:
      type: object
      properties:
        TerminalIdentification:
          description: Indicates the terminal ID for where the transaction is triggered
          type: string
        Type:
          description: "Identifies type of terminal, (POS, MPOS,ATM, etc.)"
          type: string
    Token:
      type: object
      properties:
        PaymentToken:
          description: Surrogate value of the PAN.
          type: string
        TokenExpiryDate:
          description: Expiry date of the payment token.
          type: string
        TokenRequestorIdentification:
          description: Identification of a party requesting a token.
          type: string
        TokenAssuranceData:
          description: Supporting information for the Token Assurance Method.
          type: string
        TokenAssuranceMethod:
          description: Value that allows a Token Service Provider to indicate the
            identification and verification performed representing the binding of
            the payment token to the underlying PAN and cardholder.
          type: string
        TokenInitiatedIndicator:
          description: Original transaction was initiated by Token.
          type: string
        StorageLocation:
          description: "Storage location of the token like CAWL, DVCE, ISWL, ONFL,\
            \ OTHNOTHP and TPWL."
          type: string
        OtherStorageLocation:
          description: Other private or national storage location code.
          type: string
        ProtectionMethod:
          description: "Method used to protect the token like OTHN, OTHP, SELM, SNCLSOFT\
            \ and TEEN."
          type: string
        OtherProtectionMethod:
          description: Other national or private protection method code.
          type: string
    Transaction:
      type: object
      properties:
        TransactionType:
          description: Transaction Type
          type: string
        TransactionAttribute:
          description: Transaction Attribute
          type: string
        NewPINData:
          description: New PIN data consisting of encrypted new pin block
          type: object
          allOf:
          - $ref: '#/components/schemas/NewPINData'
        TransactionAmounts:
          description: Amounts of the card transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/TransactionAmounts'
        TransactionIdentification:
          description: ' A collection of objects and attributes that can be used to
            uniquely identify a transaction.'
          type: object
          allOf:
          - $ref: '#/components/schemas/TransactionIdentification'
        PreAuthorisationTimeLimit:
          description: This field applies to pre-authorisation requests and completion
            advices. The Authorisation time limit notifies the issuer that the merchant
            or acquirer intends to follow a pre-authorisation request with a completion
            advice within a certain number of days or hours.
          type: string
    TransactionAmount:
      type: object
      properties:
        Amount:
          description: Represents the associated amount.
          type: number
        Currency:
          description: "Represents the associated amount currency, expressed as an\
            \ ISO 4217 currency code."
          type: string
    TransactionAmounts:
      type: object
      properties:
        TransactionAmount:
          description: Actual amount of the transaction.
          type: object
          allOf:
          - $ref: '#/components/schemas/TransactionAmount'
        CardholderBillingAmount:
          description: Currency code in which the cardholder will be billed.
          type: object
          allOf:
          - $ref: '#/components/schemas/CardholderBillingAmount'
        OriginalTransactionAmounts:
          description: Original Transaction Amounts.
          type: object
          allOf:
          - $ref: '#/components/schemas/OriginalTransactionAmounts'
    TransactionBookingUpdateEvent:
      type: object
      properties:
        EventId:
          type: string
        EventName:
          type: string
        Product:
          type: string
        AgreementId:
          type: string
        PaymentInstrumentId:
          type: string
        OriginalAuthorisationReferenceId:
          type: string
        LatestAuthorisationReferenceId:
          type: string
        IncrementalAmount:
          $ref: '#/components/schemas/Amount'
        LatestRetentionDateTime:
          type: string
    TransactionContext:
      type: object
      properties:
        MerchantCategoryCode:
          description: "Category code related to the type of services or goods the\
            \ merchant provides for the transaction in accordance with ISO 18245.\
            \ Code used to enable the classification of merchants into specific categories\
            \ based on the type of business, trade or services supplied. Values are\
            \ specified only for those merchant categories that are generally expected\
            \ to originate retail financial transactions (ISO 18245). The code is\
            \ checked against the list of merchant categories coded with four digit\
            \ characters, defined in the standard."
          type: string
        SettlementService:
          description: A collection of objects and attributes providing the settlement
            service details.
          type: object
          allOf:
          - $ref: '#/components/schemas/SettlementService'
    TransactionIdentification:
      type: object
      properties:
        LifeCycleTraceIdentificationData:
          description: A set of unique values that can be used to match transactions
            throughout their lifecycle.
          type: object
          allOf:
          - $ref: '#/components/schemas/LifeCycleTraceIdentificationData'
    UUID:
      format: uuid
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      type: string
    UpdateAuthRestrictionRequest:
      required:
      - UniqueIdType
      - UniqueId
      type: object
      properties:
        UniqueIdType:
          description: "Type of Unique ID e.g. FEPID, FEAID or FECID"
          minLength: 1
          type: string
        UniqueId:
          description: Unique identifier of the Restriction Level e.g. payment instrument
            (FEPID)
          maxLength: 37
          minLength: 1
          pattern: "($i)[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}"
          type: string
        FreezeAll:
          description: "Field used to freeze all transactions by cardholder for a\
            \ given Payment Instrument <br> Yes: Freeze all transactions <br> No:\
            \ Unfreeze all transactions"
          type: string
        IsATMAllowed:
          description: "Field used to restrict all ATM transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: ATM transactions are allowed\
            \ <br> No: ATM transactions not allowed"
          type: string
        IsCNPAllowed:
          description: "Field used to restrict all Card Not Present transactions by\
            \ cardholder for a given Payment Instrument <br> Yes: CNP transactions\
            \ are allowed <br> No: CNP transactions not allowed"
          type: string
        IsPOSAllowed:
          description: "Field used to restrict all POS transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: POS transactions are allowed\
            \ <br> No: POS transactions not allowed"
          type: string
        IsContactLessAllowed:
          description: "Field used to restrict all Contactless transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: Contactless transactions are\
            \ allowed <br> No: Contactless transactions not allowed"
          type: string
        IsInternationalAllowed:
          description: "Field used to freeze all International transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: International transactions\
            \ are allowed <br> No: International transactions not allowed"
          type: string
    UpdateAuthRestrictionResponse:
      type: object
      properties:
        UniqueIdType:
          description: "Type of Unique ID e.g. FEPID, FEAID or FECID"
          type: string
        UniqueId:
          description: Unique identifier of the Restriciton Level
          type: string
        FreezeAll:
          description: "Field used to freeze all transactions by cardholder for a\
            \ given Payment Instrument <br> Yes: Freeze all transactions <br> No:\
            \ Unfreeze all transactions"
          type: string
        IsATMAllowed:
          description: "Field used to restrict all ATM transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: ATM transactions are allowed\
            \ <br> No: ATM transactions not allowed"
          type: string
        IsCNPAllowed:
          description: "Field used to restrict all Card Not Present transactions by\
            \ cardholder for a given Payment Instrument <br> Yes: CNP transactions\
            \ are allowed <br> No: CNP transactions not allowed"
          type: string
        IsPOSAllowed:
          description: "Field used to restrict all POS transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: POS transactions are allowed\
            \ <br> No: POS transactions not allowed"
          type: string
        IsContactLessAllowed:
          description: "Field used to restrict all Contactless transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: Contactless transactions are\
            \ allowed <br> No: Contactless transactions not allowed"
          type: string
        IsInternationalAllowed:
          description: "Field used to freeze all International transactions by cardholder\
            \ for a given Payment Instrument <br> Yes: International transactions\
            \ are allowed <br> No: International transactions not allowed"
          type: string
    UpdateLimitRequest:
      required:
      - UniqueIdType
      - UniqueId
      type: object
      properties:
        UniqueIdType:
          description: "Type of Unique ID<br/>FEPID: Payment Instrument ID<br/>FEAID:\
            \ Account ID<br/>FECID: Customer ID"
          type: string
        UniqueId:
          description: "Unique identifier to retrieve update limit details. \nExample:\
            \ payment instrument (FEPID)"
          type: string
        Limits:
          type: array
          items:
            $ref: '#/components/schemas/LimitInput'
    UpdateLimitResponse:
      type: object
      properties:
        UniqueIdType:
          description: "Type of Unique ID<br/>FEPID: Payment Instrument ID<br/>FEAID:\
            \ Account ID<br/>FECID: Customer ID"
          type: string
        UniqueId:
          description: "Unique identifier to retrieve update limit details. \nExample:\
            \ payment instrument (FEPID)\n(FEPID)"
          type: string
        Limits:
          type: array
          items:
            $ref: '#/components/schemas/LimitOutput'
    Verification:
      type: object
      properties:
        Type:
          description: "Identifies the type of field like CVV/iCVV (NVSC), CVV2 (CSCV)\
            \ and ARQC."
          type: string
        VerificationInformation:
          description: Verification information for the verifications performed on
            PIN data.
          type: array
          items:
            $ref: '#/components/schemas/VerificationInformation'
        VerificationResult:
          description: "Verification Results like Failure, Success, Error or NoVerification."
          type: array
          items:
            $ref: '#/components/schemas/VerificationResult'
    VerificationInformation:
      type: object
      properties:
        Type:
          description: Type of verification information
          type: string
        Value:
          description: Value of verification information
          type: string
    VerificationResult:
      type: object
      properties:
        Type:
          description: Type of verification result
          type: string
        Result:
          description: "Verification Results like Failure, Success, Error or NoVerification."
          type: string
  securitySchemes:
    SecurityScheme:
      type: http
      description: Authentication
      scheme: basic
